{"version":3,"sources":["components/Pagination.tsx","utils.ts","hooks.ts","teams.ts","components/table/cells.tsx","components/table/stats.tsx","components/table/columns.tsx","store/savedPlayersSlice.ts","components/table/PlayerTable.tsx","models/Stars.ts","models/AdvancedStats.ts","models/Item.ts","models/Player.ts","api/api.ts","api/fetchhooks.ts","pages/AllPlayerPage.tsx","store/tableOptionsSlice.ts","components/CheckboxOption.tsx","components/sidebar/ListOptionsSelect.tsx","components/sidebar/Nav.tsx","store/playerFilterSlice.ts","components/sidebar/ModifierSelect.tsx","components/sidebar/TeamSelect.tsx","components/sidebar/PlayerFilterSelect.tsx","components/sidebar/PlayerColumnsSelect.tsx","components/sidebar/Sidebar.tsx","pages/SavedPlayersPage.tsx","pages/SingleTeamPage.tsx","App.tsx","store/playerItemSlice.ts","store/store.ts","index.tsx"],"names":["Pagination","props","canGoPrev","pageIndex","canGoNext","pageCount","pageIndices","i","push","actualPage","Math","min","className","clsx","href","aria-label","aria-disabled","tabIndex","undefined","onClick","gotoPage","aria-hidden","map","idx","generatePlayerTeamMap","teams","add","teamId","playerIds","position","length","playerId","player","index","team","entityId","data","lineup","rotation","bench","bullpen","shadows","parseEmoji","emoji","startsWith","String","fromCodePoint","Number","useAppDispatch","useDispatch","useAppSelector","useSelector","ilbTeamIds","coffeeTeamIds","specialTeamIds","libraryTeamIds","sortTeams","sort","a","b","aName","getTeamName","bName","nickname","localeCompare","state","scattered","location","fullName","getTeamType","includes","PlayerID","id","e","sel","window","getSelection","selectAllChildren","target","PlayerName","showUnscatteredNames","tableOptions","name","PlayerTeam","mainTeamData","deceased","teamName","getTeamData","PlayerPosition","mainTeam","hasMod","getPositionName","PlayerItem","playerItems","items","rootNameMap","Base","Bat","Board","Broom","Cannon","Cap","Cape","Chair","Egg","Field","Glove","Helmet","Jersey","Necklace","Phone","Pillow","Potion","Quill","Ring","Shoes","Socks","Sunglasses","item","placement","overlay","durability","health","root","NumericStat","value","itemValues","applyItemAdjustments","itemValue","filter","reduce","tier","tiers","inverse","tierValue","getTier","tableCell","toFixed","sign","advancedStat","stat","stats","get","attrTiers","starStat","accessor","useRealStars","stars","starTiers","combinedStarTiers","star","options","hidden","display","sortGetter","p","alt","sortKey","render","attr","opts","shortname","itemStats","savedPlayersSlice","createSlice","initialState","players","reducers","save","action","payload","unsave","clear","actions","PlayerTable","useState","column","setSort","page","setPage","columns","useMemo","cols","playerid","meta","indexOf","getPositionSortKey","s","combined","showAdvancedStats","batting","pitching","baserunning","defense","vibestats","soul","misc","fate","totalFingers","peanutAllergy","eDensity","blood","coffee","ritual","g","c","getColumns","sortedPlayers","sortColumn","flatMap","cg","keyA","keyB","comp","dir","sortPlayers","pageSize","ceil","pagedPlayers","slice","TableColgroups","TableHeader","TableBody","span","TableRow","SaveCheckbox","Cell","flatColumns","colSpan","TableColumnHeader","title","thisId","symbol","preventDefault","getSortState","dispatch","checked","savedPlayers","type","onChange","Stars","this","other","AdvancedStats","result","statIndices","battingStars","pitchingStars","baserunningStars","defenseStars","pow","tragicness","buoyancy","thwackability","moxie","divinity","musclitude","patheticism","martyrdom","shakespearianism","suppression","unthwackability","coldness","overpowerment","ruthlessness","laserlikeness","continuation","baseThirst","indulgence","groundFriction","omniscience","tenaciousness","watchfulness","anticapitalism","chasiness","record","pressurization","cinnamon","Item","isBroken","hittingRating","pitchingRating","baserunningRating","defenseRating","getStats","new","applyPart","part","adjustments","adj","prePrefix","postPrefix","suffix","prefixes","Player","roster","mods","adjustedStats","itemStars","names","leagueTeam","find","t","specialTeam","libraryTeam","getMainTeam","extractPlayerMods","fromPlayer","unscatteredName","showUnscatteredName","mod","realStars","applyItems","providedStars","baseStars","exhibitionTeams","bloodTypes","coffeeStyles","permAttr","seasAttr","weekAttr","gameAttr","itemAttr","getAllModIds","Object","keys","chronicler_base_url","process","REACT_APP_CHRONICLER_BASE_URL","fetchLeagueData","at","Promise","all","fetchPlayersAndMods","fetchTeams","teamMap","fromEntries","rosterMap","modMap","m","playerObjects","fetchEntities","modIds","attributes","pages","offset","parseInt","document","cookie","split","row","Date","getTime","toISOString","fetchJson","queryString","stringifyUrl","url","query","nextPage","fetch","mode","resp","json","useLeagueData","useSWR","swrSettings","revalidateOnFocus","focusThrottleInterval","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","AllPlayerPage","filters","playerFilter","useDebounce","filtersDebounced","filteredPlayers","values","filterPositions","status","filterStatus","filterTeams","matchTeam","search","toLocaleLowerCase","matchName","filterMods","filterMod","matchMods","positions","statuses","tableOptionsSlice","setColumn","setUseRealStars","setShowAdvancedStats","setApplyItemAdjustments","setShowUnscatteredNames","CheckboxOption","setValue","htmlFor","children","ListOptionsSelect","val","Nav","activeClassName","to","exact","playerFilterSlice","setSearch","setTeams","setMods","setPositions","setStatuses","ModifierSelect","description","selectedOptions","o","isMulti","getOptionValue","formatOptionLabel","option","context","newItems","TeamSelect","normalTeams","coffeeTeams","specialTeams","libraryTeams","unknownTeams","label","multi","Array","isArray","Search","placeholder","TeamFilter","selected","PositionFilter","ModifierFilter","newMods","StatusFilter","PlayerFilterSelect","PlayerColumnsSelect","advanced","ColumnCheckbox","SingleTeamFilter","history","useHistory","abbr","useParams","selectedTeam","shorthand","newTeams","newSelected","Sidebar","path","SavedPlayersPage","SingleTeamPage","App","basename","playerItemSlice","toShow","toggle","store","configureStore","reducer","ReactDOM","getElementById"],"mappings":"km8DAoEeA,MA5Df,SAAoBC,GAKhB,IAJA,IAAMC,EAAYD,EAAME,UAAY,EAC9BC,EAAYH,EAAME,UAAYF,EAAMI,UAAY,EAEhDC,EAAc,GACXC,EAAI,EAAGA,EAAIN,EAAMI,UAAWE,IAAKD,EAAYE,KAAKD,GAE3D,GAAIN,EAAMI,WAAa,EAAG,OAAO,KAEjC,IAAMI,EAAaC,KAAKC,IAAIV,EAAMI,UAAY,EAAGJ,EAAME,WAEvD,OACI,8BACI,qBAAIS,UAAU,aAAd,UACI,oBAAIA,UAAWC,YAAK,aAAcX,GAAa,YAA/C,SACI,mBACIU,UAAU,YACVE,KAAK,IACLC,aAAW,WACXC,iBAAgBd,EAChBe,SAAUf,OAAYgB,GAAa,EACnCC,QAAS,kBAAMlB,EAAMmB,SAASnB,EAAME,UAAY,IANpD,SAQI,sBAAMkB,cAAY,OAAlB,sBAGPf,EAAYgB,KAAI,SAACC,GAAD,OACb,oBAEIX,UAAWC,YACP,YACAJ,IAAec,GAAO,UAJ9B,SAOI,mBACIX,UAAU,YACVE,KAAK,IACLK,QAAS,kBAAMlB,EAAMmB,SAASG,IAHlC,SAKKA,EAAM,KAXNA,MAeb,oBAAIX,UAAWC,YAAK,aAAcT,GAAa,YAA/C,SACI,mBACIQ,UAAU,YACVE,KAAK,IACLC,aAAW,OACXC,iBAAgBZ,EAChBa,SAAUb,OAAYc,GAAa,EACnCC,QAAS,kBAAMlB,EAAMmB,SAASnB,EAAME,UAAY,IANpD,SAQI,sBAAMkB,cAAY,OAAlB,4B,QCzDjB,SAASG,EACZC,GAEA,IAAMH,EAAqC,GAE3C,SAASI,EAAIC,EAAgBC,EAAqBC,GAC9C,IAAK,IAAItB,EAAI,EAAGA,EAAIqB,EAAUE,OAAQvB,IAAK,CACvC,IAAMwB,EAAWH,EAAUrB,GACtBe,EAAIS,KAAWT,EAAIS,GAAY,IACpCT,EAAIS,GAAUvB,KAAK,CACfwB,OAAQD,EACRJ,OAAQA,EACRE,SAAUA,EACVI,MAAO1B,KAXU,oBAgBVkB,GAhBU,IAgB7B,2BAA0B,CAAC,IAAD,MAAfS,EAAe,QACtBR,EAAIQ,EAAKC,SAAUD,EAAKE,KAAKC,OAAQ,UACrCX,EAAIQ,EAAKC,SAAUD,EAAKE,KAAKE,SAAU,YACvCZ,EAAIQ,EAAKC,SAAN,UAAgBD,EAAKE,KAAKG,aAA1B,QAAmC,GAAI,WAC1Cb,EAAIQ,EAAKC,SAAN,UAAgBD,EAAKE,KAAKI,eAA1B,QAAqC,GAAI,WAC5Cd,EAAIQ,EAAKC,SAAN,UAAgBD,EAAKE,KAAKK,eAA1B,QAAqC,GAAI,YArBnB,8BAwB7B,OAAOnB,EAGJ,SAASoB,EAAWC,GACvB,OAAOA,EAAMC,WAAW,MAAQC,OAAOC,cAAcC,OAAOJ,IAAUA,E,oBC7B7DK,EAAiB,kBAAMC,eACvBC,EAAkDC,ICIlDC,EAAa,CACtB,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,wCAGSC,EAAgB,CACzB,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,wCAGSC,EAAiB,CAC1B,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,wCAGSC,EAAiB,CAC1B,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,wCAGG,SAASC,EAAU/B,GACtB,OAAO,YAAIA,GAAOgC,MAAK,SAACC,EAAGC,GACvB,IAAMC,EAAQC,EAAYH,GACpBI,EAAQD,EAAYF,GAC1B,OAAOC,EAAMG,SAASC,cAAcF,EAAMC,aAI3C,SAASF,EAAY3B,GAIzB,IAAD,EACE,cAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAM+B,aAAV,aAAI,EAAaC,WACN,CACHC,SAAUjC,EAAK+B,MAAMC,UAAUC,SAC/BJ,SAAU7B,EAAK+B,MAAMC,UAAUH,SAC/BK,SAAUlC,EAAK+B,MAAMC,UAAUE,UAIhC,CACHD,SAAUjC,EAAKiC,SACfJ,SAAU7B,EAAK6B,SACfK,SAAUlC,EAAKkC,UAIhB,SAASC,EAAY1C,GAExB,MAAc,wCAAVA,EAAyD,aAEzDyB,EAAWkB,SAAS3C,GAAgB,SACpC0B,EAAciB,SAAS3C,GAAgB,SACvC2B,EAAegB,SAAS3C,GAAgB,UACxC4B,EAAee,SAAS3C,GAAgB,UACrC,KC7HJ,SAAS4C,EAAStE,GACrB,IAAMuE,EAAKvE,EAAM+B,OAAOwC,GACxB,OACI,oBACI5D,UAAU,YACVO,QAAS,SAACsD,GACN,IAAMC,EAAMC,OAAOC,eAChB,OAAHF,QAAG,IAAHA,KAAKG,kBAAkBJ,EAAEK,SAJjC,SAOI,+BAAON,MAKZ,SAASO,EAAW9E,GACvB,IAAM+E,EAAuB9B,GACzB,SAACe,GAAD,OAAWA,EAAMgB,aAAaD,wBAG5BR,EAAKvE,EAAM+B,OAAOwC,GAClBU,EAAOjF,EAAM+B,OAAOkD,KAAKF,GAE/B,OACI,oBAAIpE,UAAU,cAAd,SACI,mBAAGkE,OAAO,SAAShE,KAAI,uCAAkC0D,GAAzD,SACKU,MAMV,SAASC,EAAWlF,GAcvB,IAAMmC,EAbN,SACIJ,GAEA,IAAME,EAAOF,EAAOoD,aACpB,IAAKlD,EACD,OAAIF,EAAOI,KAAKiD,SAAiB,CAAE1C,MAAO,eAAMuC,KAAM,YAC/C,KAGX,IAAMI,EAAWzB,EAAY3B,GAC7B,MAAO,CAAES,MAAOD,EAAWR,EAAKS,OAAQuC,KAAMI,EAASvB,UAG9CwB,CAAYtF,EAAM+B,QAC/B,OAAOI,EACH,qBAAIxB,UAAU,cAAd,UACI,sBAAMA,UAAU,QAAhB,SAAyBwB,EAAKO,QADlC,IACiDP,EAAK8C,QAGtD,oBAAItE,UAAU,sBAAd,eAID,SAAS4E,EAAevF,GAAwC,IAoB3DwF,EAAaxF,EAAM+B,OAAnByD,SACF5D,EApBN,YAMI,IALAG,EAKD,EALCA,OACAE,EAID,EAJCA,KAKA,OACKA,GAEDF,EAAO0D,OAAO,cAAe,WAAY,WACxC1D,EAAO0D,OAAO,eAAiB1D,EAAO0D,OAAO,WAEvC,KAEW,WAAlBxD,EAAKL,SAA8B,SACjB,aAAlBK,EAAKL,SAAgC,WACnB,YAAlBK,EAAKL,SAA+B,eAAxC,EAGa8D,CAAgB,CAAE3D,OAAQ/B,EAAM+B,OAAQE,KAAMuD,IAC/D,OAAO5D,EACH,oBAAIjB,UAAU,kBAAd,SAAiCiB,IAEjC,oBAAIjB,UAAU,0BAAd,eAID,SAASgF,EAAW3F,GAKvB,IAAM4F,EAAc5F,EAAM+B,OAAOI,KAAK0D,MAIhCC,EAAuB,CACzBC,KAAM,SACNC,IAAK,eACLC,MAAO,eACPC,MAAO,eACPC,OAAQ,eACRC,IAAK,eACLC,KAAM,eACNC,MAAO,eACPC,IAAK,eACLC,MAAO,eACPC,MAAO,eACPC,OAAQ,eACRC,OAAQ,eACRC,SAAU,eACVC,MAAO,eACPC,OAAQ,qBACRC,OAAQ,eACRC,MAAO,eACPC,KAAM,eACNC,MAAO,eACPC,MAAO,eACPC,WAAY,sBAIhB,OADiBxB,EAAcA,EAAY/D,OAAS,GAClC,EACd,oCACK+D,QADL,IACKA,OADL,EACKA,EAAavE,KAAI,SAACgG,GAAU,IAAD,EACxB,OACI,cAAC,IAAD,CACIC,UAAU,MACVC,QACI,uBACI5G,WACyB,IAArB0G,EAAKG,WACC,sBACA,GAJd,UAOKH,EAAKpC,KAAM,IACZ,6BAC0B,IAArBoC,EAAKG,WACA,WACgB,IAAhBH,EAAKI,OACL,WADA,WAEIJ,EAAKI,OAFT,YAEmBJ,EAAKG,WAFxB,UAdtB,SAqBI,sBACI7G,UAAS,qBACgB,IAArB0G,EAAKG,WAAoB,iBAAmB,IAFpD,oBAKK1B,EAAYuB,EAAKK,KAAKzC,aAL3B,QAKoC,SACf,IAAhBoC,EAAKI,OACF,sBAAM9G,UAAU,cAAhB,oBAEA,mCAcxB,mCCrKR,SAASgH,EAAY3H,GAOjB,GAAoB,OAAhBA,EAAM4H,MAAgB,OAAO,oBAAIjH,UAAU,eAAd,eAEjC,IAIMkH,EAJuB5E,GACzB,SAACe,GAAD,OAAWA,EAAMgB,aAAa8C,wBAI5B9H,EAAM6F,MACDxE,KAAI,SAACgG,GAAD,MAAW,CACZA,OACAO,MAAO5H,EAAM+H,UAAUV,OAE1BW,QAAO,SAAC1H,GAAD,OAAOA,EAAEsH,SACrB,GAEAG,EAAYF,EAAWI,QAAO,SAACxE,EAAGC,GAAJ,OAAUD,EAAIC,EAAEkE,QAAO,GACrDA,EAAQ5H,EAAM4H,MAAQG,EACtBG,EA2FV,SAAiBN,EAAeO,EAAiBC,GAE7C,IADA,IAAMC,EAAYD,EAAU,EAAIR,EAAQA,EAC/BtH,EAAI,EAAGA,EAAI6H,EAAMtG,OAAQvB,IAC9B,GAAI+H,EAAYF,EAAM7H,GAAI,OAAOA,EAErC,OAAO6H,EAAMtG,OAhGAyG,CAAQV,EAAO5H,EAAMmI,MAAOnI,EAAMoI,SAEzCG,EACF,oBACI5H,UAAWC,YACP,eADW,uBAEKsH,GAChBH,GAAa,qBAJrB,SAOKH,EAAMY,QAAQ,KAIvB,OAAIT,EAEI,cAAC,IAAD,CACIT,UAAU,MACVC,QACI,8BACKM,EAAWxG,KAAI,SAACf,GACb,IAAMmI,EAAOnI,EAAEsH,MAAQ,EAAI,IAAM,GACjC,OACI,gCACI,sBAAMjH,WAAuC,IAA5BL,EAAE+G,KAAKlF,KAAKqF,WAAoB,sBAAwB,GAAzE,SAA8ElH,EAAE+G,KAAKlF,KAAK8C,OAD9F,KAC6GwD,EACxGnI,EAAEsH,MAAMY,QAAQ,KAFXlI,EAAE+G,KAAKlF,KAAKoC,SAP1C,SAgBKgE,IAIFA,EAIR,SAASG,EACZC,EACAR,EACAC,GAgBA,OAdA,SAAcpI,GACV,IAAM4H,EAAQ5H,EAAM+B,OAAO6G,MAAMC,IAAIF,GAErC,OACI,cAAChB,EAAD,CACIC,MAAOA,EACP/B,MAAO7F,EAAM+B,OAAO8D,MACpBkC,UAAW,SAACzH,GAAD,OAAOA,EAAEsI,MAAMC,IAAIF,IAC9BR,MAAK,OAAEA,QAAF,IAAEA,IAASW,EAChBV,QAAO,OAAEA,QAAF,IAAEA,QAQlB,SAASW,EACZC,EACAb,GAoBA,OAlBA,SAAcnI,GACV,IAAMiJ,EAAehG,GACjB,SAACe,GAAD,OAAWA,EAAMgB,aAAaiE,gBAG5BrB,EAAQoB,EAAShJ,EAAM+B,OAAOmH,MAAMD,IAE1C,OACI,cAACtB,EAAD,CACIC,MAAOA,EACP/B,MAAO7F,EAAM+B,OAAO8D,MACpBkC,UAAW,SAACzH,GAAD,OAAO0I,EAAS1I,EAAE4I,QAC7Bf,MAAOA,EACPC,SAAS,KAQlB,IAAMU,EAAY,CAAC,KAAO,IAAM,IAAM,IAAM,GACtCK,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBC,EAAoB,CAAC,EAAG,EAAG,GAAI,GAAI,ICqJhD,SAASC,EACLpE,EACA+D,EACAM,GAIO,IAHPC,EAGM,wDAFNC,EAEM,uDAFI,SACVrB,EACM,uDADEgB,EAEFM,EAAa,SAACC,GAAD,OACfV,EAASU,EAAER,MAAMI,EAAQL,aAAcK,EAAQxB,wBAEnD,MAAO,CACHvD,GAAG,GAAD,OAAKU,EAAL,SACFA,KAAMuE,EACNG,IAAI,GAAD,OAAK1E,EAAL,UACH2E,QAASH,EACTI,OAAQd,EAASC,EAAUb,GAC3BoB,UAIR,SAASO,EACLC,EACA9E,EACA+E,EACArB,GAEO,IADPP,EACM,wDACN,MAAO,CACH7D,GAAIyF,EACJ/E,KAAM+E,EACNL,IAAK1E,EACL2E,QAAS,SAACF,GAAD,OACLA,EAAEd,MAAMC,IAAIF,IACXoB,EAAKjC,qBAAuB4B,EAAEO,UAAUpB,IAAIF,GAAQ,IACzDkB,OAAQnB,EAAaC,EAAMG,EAAWV,I,YC1SjC8B,EAAoBC,YAAY,CACzClF,KAAM,eACNmF,aAJiB,CAAEC,QAAS,IAK5BC,SAAU,CACNC,KAAM,SAACvG,EAAOwG,GACNxG,EAAMqG,QAAQhG,SAASmG,EAAOC,UAClCzG,EAAMqG,QAAQ9J,KAAKiK,EAAOC,UAE9BC,OAAQ,SAAC1G,EAAOwG,GACZxG,EAAMqG,QAAUrG,EAAMqG,QAAQrC,QAAO,SAACzD,GAAD,OAAQA,IAAOiG,EAAOC,YAE/DE,MAAO,SAAC3G,GACJA,EAAMqG,QAAU,O,EAKWH,EAAkBU,QAA1CL,E,EAAAA,KAAMG,E,EAAAA,O,EAAQC,MCAtB,SAASE,EAAY7K,GAAuC,IAAD,EACtC8K,mBAAoB,CAAEC,OAAQ,OADQ,mBACvDvH,EADuD,KACjDwH,EADiD,OAEtCF,mBAAiB,GAFqB,mBAEvDG,EAFuD,KAEjDC,EAFiD,KAGxDlG,EAAe/B,GAAe,SAACe,GAAD,OAAWA,EAAMgB,gBAE/CmG,EAAUC,mBAAQ,kBFVrB,SAAoBrB,GACvB,IAAMsB,EAAOtB,EAAKoB,QAqPlB,MAnP8B,CAC1B,CACIlG,KAAM,OACNkG,QAAS,CACL,CACI5G,GAAI,WACJU,KAAM,YACN4E,OAAQvF,EACRsF,QAAS,SAACF,GAAD,OAAOA,EAAEnF,IAClBgF,QAAS8B,EAAKC,UAElB,CACI/G,GAAI,OACJU,KAAM,OACN4E,OAAQ/E,EACR8E,QAAS,SAACF,GAAD,OAAOA,EAAEvH,KAAK8C,OAE3B,CACIV,GAAI,OACJU,KAAM,OACN4E,OAAQ3E,EACR0E,QAAS,SAACF,GAAD,mCAAOA,EAAElE,gBAAT,aAAO,EAAY9D,cAAnB,QAA6B,IACtC6H,QAAS8B,EAAKpJ,MAElB,CACIsC,GAAI,WACJU,KAAM,WACN4E,OAAQtE,EACRqE,QAAS,SAACF,GAAD,OLftB,SAAyB6B,GAC5B,IAAMtJ,EAAOsJ,EAAK/F,SAClB,OAAKvD,EAG0D,IAA3D,CAAC,SAAU,WAAY,WAAWuJ,QAAQvJ,EAAKL,UAC/CK,EAAKD,MAJS,IKacyJ,CAAmB/B,IACnCH,QAAS8B,EAAKzJ,UAElB,CACI2C,GAAI,OACJU,KAAM,QACN4E,OAAQlE,EACRiE,QAAS,SAACF,GAAD,OAAQA,EAAEvH,KAAK0D,MAAQ6D,EAAEvH,KAAK0D,MAAMhE,OAAS,GACtD0H,QAAS8B,EAAKxF,OAElBwD,EACI,YACA,SAACqC,GAAD,OAAOA,EAAEC,WACT5B,GACCA,EAAK6B,kBACN,eACAxC,KAIZ,CACInE,KAAM,QACNkG,QAAS,CACL9B,EACI,YACA,SAACqC,GAAD,OAAOA,EAAEC,WACT5B,EACAA,EAAK6B,kBACL,eACAxC,GAEJC,EACI,WACA,SAACqC,GAAD,OAAOA,EAAEG,UACT9B,GACCsB,EAAKQ,QACN,WAEJxC,EACI,YACA,SAACqC,GAAD,OAAOA,EAAEI,WACT/B,GACCsB,EAAKS,SACN,YAEJzC,EACI,eACA,SAACqC,GAAD,OAAOA,EAAEK,cACThC,GACCsB,EAAKU,YACN,eAEJ1C,EACI,WACA,SAACqC,GAAD,OAAOA,EAAEM,UACTjC,GACCsB,EAAKW,QACN,YAGRzC,OAAQQ,EAAK6B,mBAEjB,CACI3G,KAAM,UACNsE,QAASQ,EAAK6B,oBAAsBP,EAAKQ,QACzCV,QAAS,CACL9B,EAAK,WAAW,SAACqC,GAAD,OAAOA,EAAEG,UAAS9B,GAClCD,EAAKC,EAAM,WAAY,OAAQ,YAC/BD,EAAKC,EAAM,WAAY,QAAS,YAChCD,EAAKC,EAAM,YAAa,QAAS,aACjCD,EAAKC,EAAM,QAAS,QAAS,SAC7BD,EAAKC,EAAM,aAAc,QAAS,cAClCD,EAAKC,EAAM,cAAe,OAAQ,eAAe,GACjDD,EAAKC,EAAM,gBAAiB,QAAS,iBACrCD,EAAKC,EAAM,aAAc,QAAS,cAAc,KAGxD,CACI9E,KAAM,WACNsE,QAASQ,EAAK6B,oBAAsBP,EAAKS,SACzCX,QAAS,CACL9B,EAAK,YAAY,SAACqC,GAAD,OAAOA,EAAEI,WAAU/B,GACpCD,EAAKC,EAAM,WAAY,OAAQ,YAC/BD,EAAKC,EAAM,gBAAiB,MAAO,iBACnCD,EAAKC,EAAM,eAAgB,OAAQ,gBACnCD,EAAKC,EAAM,mBAAoB,SAAU,oBACzCD,EAAKC,EAAM,cAAe,OAAQ,eAClCD,EAAKC,EAAM,kBAAmB,QAAS,qBAG/C,CACI9E,KAAM,cACNsE,QAASQ,EAAK6B,oBAAsBP,EAAKU,YACzCZ,QAAS,CACL9B,EAAK,eAAe,SAACqC,GAAD,OAAOA,EAAEK,cAAahC,GAC1CD,EAAKC,EAAM,cAAe,QAAS,cACnCD,EAAKC,EAAM,eAAgB,OAAQ,gBACnCD,EAAKC,EAAM,kBAAmB,OAAQ,kBACtCD,EAAKC,EAAM,aAAc,QAAS,cAClCD,EAAKC,EAAM,gBAAiB,QAAS,mBAG7C,CACI9E,KAAM,UACNsE,QAASQ,EAAK6B,oBAAsBP,EAAKW,QACzCb,QAAS,CACL9B,EAAK,WAAW,SAACqC,GAAD,OAAOA,EAAEM,UAASjC,GAClCD,EAAKC,EAAM,iBAAkB,QAAS,kBACtCD,EAAKC,EAAM,YAAa,QAAS,aACjCD,EAAKC,EAAM,cAAe,OAAQ,eAClCD,EAAKC,EAAM,gBAAiB,QAAS,iBACrCD,EAAKC,EAAM,eAAgB,QAAS,kBAG5C,CACI9E,KAAM,QACNsE,QAASQ,EAAK6B,oBAAsBP,EAAKY,UACzCd,QAAS,CACLrB,EAAKC,EAAM,iBAAkB,QAAS,kBACtCD,EAAKC,EAAM,WAAY,OAAQ,cAGvC,CACI9E,KAAM,OACNkG,QAAS,CACL,CACI5G,GAAI,OACJU,KAAM,OACN0E,IAAK,OACLC,QAAS,SAACF,GAAD,OAAOA,EAAEvH,KAAK+J,MACvBrC,OAAQ,gBAAG9H,EAAH,EAAGA,OAAH,OACJ,oBAAIpB,UAAU,eAAd,SAA8BoB,EAAOI,KAAK+J,QAE9C3C,QAASQ,EAAKoB,QAAQgB,MAE1B,CACI5H,GAAI,OACJU,KAAM,OACN0E,IAAK,OACLC,QAAS,SAACF,GAAD,uBAAOA,EAAEvH,KAAKiK,YAAd,SAAuB,GAChCvC,OAAQ,gBAAG9H,EAAH,EAAGA,OAAH,OACJ,oBAAIpB,UAAU,eAAd,SAA8BoB,EAAOI,KAAKiK,QAE9C7C,QAASQ,EAAKoB,QAAQgB,MAE1B,CACI5H,GAAI,UACJU,KAAM,UACN0E,IAAK,oBACLC,QAAS,SAACF,GAAD,OAAOA,EAAEvH,KAAKkK,cACvBxC,OAAQ,gBAAG9H,EAAH,EAAGA,OAAH,OACJ,oBAAIpB,UAAU,eAAd,SACKoB,EAAOI,KAAKkK,gBAGrB9C,QAASQ,EAAKoB,QAAQgB,MAE1B,CACI5H,GAAI,UACJU,KAAM,UACN0E,IAAK,iBACLC,QAAS,SAACF,GAAD,OAAQA,EAAEvH,KAAKmK,cAAgB,EAAI,GAC5CzC,OAAQ,gBAAG9H,EAAH,EAAGA,OAAH,OACJ,6BAAKA,EAAOI,KAAKmK,cAAgB,eAAO,kBAE5C/C,QAASQ,EAAKoB,QAAQgB,MAE1B,CACI5H,GAAI,WACJU,KAAM,WACN0E,IAAK,WACLC,QAAS,SAACF,GAAD,uBAAOA,EAAEvH,KAAKoK,gBAAd,QAA0B,MACnC1C,OAAQ,gBAAG9H,EAAH,EAAGA,OAAH,OACJ,oBAAIpB,UAAU,eAAd,SACKoB,EAAOI,KAAKoK,SACPxK,EAAOI,KAAKoK,SAAS/D,QAAQ,GAC7B,OAGde,QAASQ,EAAKoB,QAAQgB,QAIlC,CACIlH,KAAM,aACNsE,QAAQ,EACR4B,QAAS,CACL,CACI5G,GAAI,QACJU,KAAM,QACN2E,QAAS,SAACF,GAAD,uBAAOA,EAAEvH,KAAKqK,aAAd,SAAwB,GACjC3C,OAAQ,gBAAG9H,EAAH,EAAGA,OAAH,OACJ,oBAAIpB,UAAU,eAAd,SAA8BoB,EAAOyK,YAG7C,CACIjI,GAAI,SACJU,KAAM,SACN2E,QAAS,SAACF,GAAD,uBAAOA,EAAEvH,KAAKsK,cAAd,SAAyB,GAClC5C,OAAQ,gBAAG9H,EAAH,EAAGA,OAAH,OACJ,oBAAIpB,UAAU,gBAAd,SAA+BoB,EAAO0K,aAG9C,CACIlI,GAAI,SACJU,KAAM,SACN2E,QAAS,SAACF,GAAD,uBAAOA,EAAEvH,KAAKuK,cAAd,QAAwB,MACjC7C,OAAQ,gBAAG9H,EAAH,EAAGA,OAAH,OACJ,oBAAIpB,UAAU,gBAAd,SAA+BoB,EAAOI,KAAKuK,cAQ1DrL,KAAI,SAACsL,GAAD,mBAAC,eAAYA,GAAb,IAAgBxB,QAASwB,EAAExB,QAAQnD,QAAO,SAAC4E,GAAD,OAAQA,EAAErD,eACxDvB,QAAO,SAAC2E,GAAD,OAAQA,EAAEpD,QAAUoD,EAAExB,QAAQtJ,OAAS,KE9OrBgL,CAAW7H,KAAe,CAACA,IACnD8H,EAAgB1B,mBAClB,kBAyLR,SACIf,EACAc,EACA3H,GAEA,IAAKA,EAAKuH,OAAQ,OAAOV,EAEzB,IAAM0C,EAAa5B,EACd6B,SAAQ,SAACC,GAAD,OAAQA,EAAG9B,WACnBnD,QAAO,SAAC4E,GAAD,OAAOA,EAAErI,KAAOf,EAAKuH,UAAQ,GAEnCnB,EAAO,OAAGmD,QAAH,IAAGA,OAAH,EAAGA,EAAYnD,QAC5B,OAAKA,EAEE,YAAIS,GAAS7G,MAAK,SAACC,EAAGC,GAAO,IAAD,IACzBwJ,EAAI,UAAGtD,EAAQnG,UAAX,QAAiB,EACrB0J,EAAI,UAAGvD,EAAQlG,UAAX,QAAiB,EACrB0J,EAAOF,EAAOC,EAAO,EAAID,EAAOC,GAAQ,EAAI,EAClD,MAAoB,QAAb3J,EAAK6J,IAAgBD,GAAQA,KANnB/C,EArMXiD,CAAYtN,EAAMqK,QAASc,EAAS3H,KAC1C,CAAC2H,EAASnL,EAAMqK,QAASrF,EAAcxB,IAGrCpD,EAAYJ,EAAMuN,SAClB9M,KAAK+M,KAAKxN,EAAMqK,QAAQxI,OAAS7B,EAAMuN,UACvC,EAEAE,EAAerC,mBAAQ,WACzB,IAAKpL,EAAMuN,SAAU,OAAOT,EAE5B,IAAM1M,EAAYK,KAAK+M,KAAKxN,EAAMqK,QAAQxI,OAAS7B,EAAMuN,UACnD/M,EAAaC,KAAKC,IAAIuK,EAAM7K,EAAY,GAC9C,OAAO0M,EAAcY,MACjBlN,EAAaR,EAAMuN,UAClB/M,EAAa,GAAKR,EAAMuN,YAE9B,CAACT,EAAe7B,EAAMjL,EAAMuN,WAE/B,OACI,gCACI,wBAAO5M,UAAU,0CAAjB,UACI,cAACgN,EAAD,CAAgBxC,QAASA,IACzB,cAACyC,EAAD,CAAazC,QAASA,EAAS3H,KAAMA,EAAMwH,QAASA,IACpD,cAAC6C,EAAD,CAAWxD,QAASoD,EAActC,QAASA,OAE/C,cAAC,EAAD,CACI/K,UAAWA,EACXF,UAAW+K,EACX9J,SAAU+J,OAM1B,SAASyC,EAAe3N,GACpB,OACI,mCACKA,EAAMmL,QAAQ9J,KAAI,SAAC4L,EAAI3M,GAAL,OACf,0BAGIwN,KAAMb,EAAG9B,QAAQtJ,QAAgB,IAANvB,EAAU,EAAI,IAFpC2M,EAAGhI,WAc5B,SAAS4I,EAAU7N,GACf,OACI,gCACKA,EAAMqK,QAAQhJ,KAAI,SAACqI,GAAD,OACf,cAACqE,EAAD,CAAqBhM,OAAQ2H,EAAGyB,QAASnL,EAAMmL,SAAhCzB,EAAEnF,SAWjC,SAASwJ,EAAS/N,GAKd,OACI,+BACI,cAACgO,EAAD,CAAczJ,GAAIvE,EAAM+B,OAAOwC,KAC9BvE,EAAMmL,QAAQ6B,SAAQ,SAACC,GACpB,OAAOA,EAAG9B,QAAQ9J,KAAI,SAACuL,GACnB,IAAMqB,EAAOrB,EAAE/C,OACf,OAAKoE,EACE,cAACA,EAAD,CAAiBlM,OAAQ/B,EAAM+B,QAApB6K,EAAErI,IADF,sBAASqI,EAAErI,aAYjD,SAASqJ,EAAY5N,GACjB,IAAMkO,EAAclO,EAAMmL,QAAQ6B,SAAQ,SAACC,GAAD,OAAQA,EAAG9B,WACrD,OACI,kCACI,+BACI,uBACCnL,EAAMmL,QAAQ9J,KAAI,SAAC4L,EAAI3M,GAAL,OACf,oBAAY6N,QAASlB,EAAG9B,QAAQtJ,OAAhC,SACKoL,EAAGhI,MADC3E,SAKjB,+BACI,uBACC4N,EAAY7M,KAAI,SAACuL,GAAD,OACb,cAACwB,EAAD,CAEI7J,GAAIqI,EAAErI,GACN8J,MAAOzB,EAAEjD,IACT1E,KAAM2H,EAAE3H,KACRzB,KAAMxD,EAAMwD,KACZwH,QAAShL,EAAMgL,SALV4B,EAAErI,aAmB/B,SAAS6J,EAAkBpO,GACvB,IAuCmBsO,EAAgBtK,EAvC7BuK,GAuCaD,EAvCUtO,EAAMuE,GAuCAP,EAvCIhE,EAAMwD,KAwCzC8K,IAAWtK,EAAM+G,OAAe,KAClB,QAAd/G,EAAMqJ,IAAsB,SACd,SAAdrJ,EAAMqJ,IAAuB,eAC1B,MAzCP,OACI,qBACIgB,MAAOrO,EAAMqO,MACbnN,QAAS,SAACsD,GACNA,EAAEgK,iBACFxO,EAAMgL,QAuCtB,SAAsBsD,EAAgBtK,GAElC,OAAIA,EAAM+G,SAAWuD,EAAe,CAAEvD,OAAQuD,EAAQjB,IAAK,OAGzC,QAAdrJ,EAAMqJ,IAAsB,CAAEtC,OAAQuD,EAAQjB,IAAK,QAGhD,CAAEtC,OAAQ,KAAMsC,SAAKpM,GA/CFwN,CAAazO,EAAMuE,GAAIvE,EAAMwD,QAJnD,UAOKxD,EAAMiF,KACNsJ,KAKb,SAASP,EAAahO,GAClB,IAAM0O,EAAW3L,IAEX4L,EADU1L,GAAe,SAACe,GAAD,OAAWA,EAAM4K,aAAavE,WACrChG,SAASrE,EAAMuE,IAEvC,OACI,oBAAI5D,UAAU,YAAd,SACI,uBACIA,UAAU,mBACVkO,KAAK,WACLF,QAASA,EACTG,SAAU,SAACtK,GACHA,EAAEK,OAAO8J,QACTD,EAASnE,EAAKvK,EAAMuE,KAEpBmK,EAAShE,EAAO1K,EAAMuE,U,0DC/LjCwK,GAAb,WACI,aAKG,IAJQlD,EAIT,uDAJ2B,EAClBC,EAGT,uDAH4B,EACnBC,EAET,uDAF+B,EACtBC,EACT,uDAD2B,EAC3B,0BAJSH,UAIT,KAHSC,WAGT,KAFSC,cAET,KADSC,UALf,2CAQI,WACI,OAAOgD,KAAKnD,QAAUmD,KAAKlD,SAAWkD,KAAKjD,YAAciD,KAAKhD,UATtE,iBAYI,SAAIiD,GACA,OAAO,IAAIF,EACPC,KAAKnD,QAAUoD,EAAMpD,QACrBmD,KAAKlD,SAAWmD,EAAMnD,SACtBkD,KAAKjD,YAAckD,EAAMlD,YACzBiD,KAAKhD,QAAUiD,EAAMjD,aAjBjC,KC+BakD,GAAb,WACI,WAAoB/M,GAAiC,0BAAjCA,OADxB,wCAkBI,SAAIoC,GACA,OAAOyK,KAAK7M,KAAKoC,KAnBzB,iBAsBI,SAAI0K,GACA,IADqC,EAC/BE,EAAS,IAAID,EAAJ,eAAuBF,KAAK7M,OADN,cAEpBiN,IAFoB,IAErC,gCAAW7K,EAAX,QAA8B4K,EAAOhN,KAAKoC,IAAO0K,EAAM9M,KAAKoC,IAFvB,8BAGrC,OAAO4K,IAzBf,mBA4BI,WACI,IAAMtD,EAAUmD,KAAKK,eACfvD,EAAWkD,KAAKM,gBAChBvD,EAAciD,KAAKO,mBACnBvD,EAAUgD,KAAKQ,eACrB,OAAO,IAAIT,GAAMlD,EAASC,EAAUC,EAAaC,KAjCzD,0BAoCI,WACI,OACI,EACAvL,KAAKgP,IAAI,EAAIT,KAAK7M,KAAKuN,WAAY,KACnCjP,KAAKgP,IAAIT,KAAK7M,KAAKwN,SAAU,GAC7BlP,KAAKgP,IAAIT,KAAK7M,KAAKyN,cAAe,KAClCnP,KAAKgP,IAAIT,KAAK7M,KAAK0N,MAAO,MAC1BpP,KAAKgP,IAAIT,KAAK7M,KAAK2N,SAAU,KAC7BrP,KAAKgP,IAAIT,KAAK7M,KAAK4N,WAAY,MAC/BtP,KAAKgP,IAAI,EAAIT,KAAK7M,KAAK6N,YAAa,KACpCvP,KAAKgP,IAAIT,KAAK7M,KAAK8N,UAAW,OA9C1C,2BAkDI,WACI,OACI,EACAxP,KAAKgP,IAAIT,KAAK7M,KAAK+N,iBAAkB,IACrCzP,KAAKgP,IAAIT,KAAK7M,KAAKgO,YAAa,GAChC1P,KAAKgP,IAAIT,KAAK7M,KAAKiO,gBAAiB,IACpC3P,KAAKgP,IAAIT,KAAK7M,KAAKkO,SAAU,MAC7B5P,KAAKgP,IAAIT,KAAK7M,KAAKmO,cAAe,KAClC7P,KAAKgP,IAAIT,KAAK7M,KAAKoO,aAAc,MA1D7C,8BA8DI,WACI,OACI,EACA9P,KAAKgP,IAAIT,KAAK7M,KAAKqO,cAAe,IAClC/P,KAAKgP,IAAIT,KAAK7M,KAAKsO,aAAc,IACjChQ,KAAKgP,IAAIT,KAAK7M,KAAKuO,WAAY,IAC/BjQ,KAAKgP,IAAIT,KAAK7M,KAAKwO,WAAY,IAC/BlQ,KAAKgP,IAAIT,KAAK7M,KAAKyO,eAAgB,MArE/C,0BAyEI,WACI,OACI,EACAnQ,KAAKgP,IAAIT,KAAK7M,KAAK0O,YAAa,IAChCpQ,KAAKgP,IAAIT,KAAK7M,KAAK2O,cAAe,IAClCrQ,KAAKgP,IAAIT,KAAK7M,KAAK4O,aAAc,IACjCtQ,KAAKgP,IAAIT,KAAK7M,KAAK6O,eAAgB,IACnCvQ,KAAKgP,IAAIT,KAAK7M,KAAK8O,UAAW,OAhF1C,kBAGI,WACI,IADwB,EAClBC,EAA4C,GAD1B,cAEP9B,IAFO,IAExB,4BAA8B8B,EAA9B,SAA2C,GAFnB,8BAGxB,OAAO,IAAIhC,EAAcgC,KANjC,wBASI,SAAkBnP,GAAyC,IAAD,IAMtD,OAAO,IAAImN,EALA,2BACJnN,GADI,IAEPoP,eAAc,UAAEpP,EAAOoP,sBAAT,QAA2B,EACzCC,SAAQ,UAAErP,EAAOqP,gBAAT,QAAqB,SAbzC,KAqFahC,GAA0B,CACnC,aACA,WACA,gBACA,QACA,WACA,aACA,cACA,YACA,WACA,aACA,gBACA,eACA,aACA,iBACA,mBACA,cACA,kBACA,WACA,gBACA,eACA,iBACA,cACA,gBACA,eACA,iBACA,aC1ISiC,GAAb,WAII,WAAmBlP,GAAmB,0BAAnBA,OAAkB,KAHrC+G,WAGqC,OAFrCN,WAEqC,EACjCoG,KAAK9F,MAAQ8F,KAAKsC,WACZ,IAAIvC,GACJ,IAAIA,GAC0B,EAA1BC,KAAK7M,KAAKoP,cACiB,EAA3BvC,KAAK7M,KAAKqP,eACoB,EAA9BxC,KAAK7M,KAAKsP,kBACgB,EAA1BzC,KAAK7M,KAAKuP,eAEpB1C,KAAKpG,MAAQoG,KAAK2C,WAb1B,6CAgBI,WACI,OAA4B,IAArB3C,KAAK7M,KAAKsF,SAA0C,IAA1BuH,KAAK7M,KAAKqF,aAjBnD,sBAoBI,WACI,GAAyB,IAArBwH,KAAK7M,KAAKsF,SAA0C,IAA1BuH,KAAK7M,KAAKqF,WACpC,OAAO0H,GAAc0C,MAGzB,IAL8B,EAKxBhJ,EAA2C,GALnB,cAMbwG,IANa,IAM9B,gCAAW7K,EAAX,QAA8BqE,EAAMrE,GAAM,GANZ,8BAQ9B,SAASsN,EAAUC,GAAiB,IAAD,gBACbA,EAAKC,aADQ,IAC/B,2BAAoC,CAAC,IAA1BC,EAAyB,QAChC,GAAiB,IAAbA,EAAInD,KAAY,CAAC,IAAD,EACVlG,EAAOyG,GAAY4C,EAAIrJ,MAC7BC,EAAMD,IAAQ,UAACC,EAAMD,UAAP,QAAgB,GAAKqJ,EAAIpK,QAJhB,+BAanC,GAJIoH,KAAK7M,KAAKuF,MAAMmK,EAAU7C,KAAK7M,KAAKuF,MACpCsH,KAAK7M,KAAK8P,WAAWJ,EAAU7C,KAAK7M,KAAK8P,WACzCjD,KAAK7M,KAAK+P,YAAYL,EAAU7C,KAAK7M,KAAK+P,YAC1ClD,KAAK7M,KAAKgQ,QAAQN,EAAU7C,KAAK7M,KAAKgQ,QACtCnD,KAAK7M,KAAKiQ,SAAU,CAAC,IAAD,gBACCpD,KAAK7M,KAAKiQ,UADX,IACpB,4BAAyCP,EAAzC,UADoB,+BAIxB,OAAO,IAAI3C,GAActG,OA7CjC,KCmBayJ,GAAb,WAiBI,WACItQ,EACAP,EACA8Q,GACD,IAAD,gCApBc/N,QAoBd,OAnBcpC,UAmBd,OAlBcoQ,UAkBd,OAhBc/M,cAgBd,OAfcL,kBAed,OAdc3D,WAcd,OAZcoH,WAYd,OAXcqB,eAWd,OAVcuI,mBAUd,OATcC,eASd,OAPc5M,WAOd,OANc6M,WAMd,EACE1D,KAAKzK,GAAKxC,EAAOG,SACjB8M,KAAK7M,KAAOJ,EAAOI,KACnB6M,KAAKxN,MAAL,UAAa8Q,EAAOvQ,EAAOG,iBAA3B,QAAwC,GAExC8M,KAAKxJ,SA6Fb,SAAqBhE,GAA2C,IAAD,IACrDmR,EAAanR,EAAMoR,MAAK,SAACC,GAAD,MAAiC,WAA1BzO,EAAYyO,EAAEnR,WAC7CoR,EAActR,EAAMoR,MAAK,SAACC,GAAD,MAAiC,YAA1BzO,EAAYyO,EAAEnR,WAC9CqR,EAAcvR,EAAMoR,MAAK,SAACC,GAAD,MAAiC,YAA1BzO,EAAYyO,EAAEnR,WACpD,kCAAOiR,QAAP,IAAOA,IAAcG,SAArB,QAAoCC,SAApC,QAAmD,KAjG/BC,CAAYhE,KAAKxN,OACjCwN,KAAK7J,aAAe6J,KAAKxJ,SAAWhE,EAAMwN,KAAKxJ,SAAS9D,QAAU,KAElEsN,KAAKuD,KAAOU,GAAkBjE,KAAK7M,MAEnC6M,KAAKpG,MAAQsG,GAAcgE,WAAWlE,KAAK7M,MAE3C6M,KAAKnJ,OAAQ,UAACmJ,KAAK7M,KAAK0D,aAAX,QAAoB,IAAIxE,KAAI,SAACf,GAAD,OAAO,IAAI+Q,GAAK/Q,MACzD0O,KAAK/E,UAAY+E,KAAKnJ,MACjBxE,KAAI,SAACf,GAAD,OAAOA,EAAEsI,SACbX,QAAO,SAACxE,EAAGC,GAAJ,OAAUD,EAAEhC,IAAIiC,KAAIwL,GAAc0C,OAC9C5C,KAAKyD,UAAYzD,KAAKnJ,MACjBxE,KAAI,SAACf,GAAD,OAAOA,EAAE4I,SACbjB,QAAO,SAACxE,EAAGC,GAAJ,OAAUD,EAAEhC,IAAIiC,KAAI,IAAIqL,IACpCC,KAAKwD,cAAgBxD,KAAKpG,MAAMnH,IAAIuN,KAAK/E,WAEzC+E,KAAK0D,MAAQ,CAAC1D,KAAK7M,KAAK8C,OACxB,UAAI+J,KAAK7M,KAAK6B,aAAd,aAAI,EAAiBmP,kBACjBnE,KAAK0D,MAAMnS,KAAKyO,KAAK7M,KAAK6B,MAAMmP,iBA5C5C,yCA+CI,SAAKC,GACyB,IAAD,IAAzB,OAAIA,GACA,oBAAOpE,KAAK7M,KAAK6B,aAAjB,aAAO,EAAiBmP,uBAAxB,QAEGnE,KAAK7M,KAAK8C,OAnDzB,oBAsDI,WAAoC,IAAD,uBAAzBsN,EAAyB,yBAAzBA,EAAyB,gBAE/B,cAAkBA,EAAlB,eAAwB,CAAnB,IAAMc,EAAG,KACV,GAAIrE,KAAKuD,KAAKlO,SAASgP,GAAM,OAAO,EAExC,OAAO,IA3Df,mBA8DI,WAAoD,IAA9CC,IAA6C,yDAA3BC,EAA2B,wDAE/C,QADgCtS,IAA5B+N,KAAK7M,KAAKoP,gBAA6B+B,GAAY,GACnDA,EAAW,CACX,IAAM1K,EAAQ2K,EAAavE,KAAKwD,cAAgBxD,KAAKpG,MACrD,OAAOA,EAAMM,QAEjB,OAAO8F,KAAKwE,cAAcD,KApElC,2BAuEI,WAA0C,IAA5BA,EAA2B,wDACrC,QAAgCtS,IAA5B+N,KAAK7M,KAAKoP,cAEV,OAAOvC,KAAK9F,OAAM,EAAMqK,GAG5B,IAAME,EAAY,IAAI1E,GACQ,EAA1BC,KAAK7M,KAAKoP,cACiB,EAA3BvC,KAAK7M,KAAKqP,eACoB,EAA9BxC,KAAK7M,KAAKsP,kBACgB,EAA1BzC,KAAK7M,KAAKuP,eAGd,OAAO6B,EAAaE,EAAUhS,IAAIuN,KAAKyD,WAAagB,IApF5D,oBAuFI,WAAwB,IAAD,IACnB,GAAgB,yCAAZzE,KAAKzK,GACL,MAAO,aAEX,GAAIyK,KAAK7M,KAAKiD,SAAU,MAAO,WAG/B,GACI4J,KAAKvJ,OAAO,UAAW,SAAU,SAChCuJ,KAAKvJ,OAAO,eAAiBuJ,KAAKvJ,OAAO,WAE1C,MAAO,UAEX,IAAMxD,EAAI,oBAAG+M,KAAKxJ,gBAAR,aAAG,EAAe9D,cAAlB,QAA4B,GACtC,OAAIgS,GAAgBrP,SAASpC,GAAc,aACvCqB,EAAee,SAASpC,GAAc,UAGtC+M,KAAKvJ,OAAO,eAAuB,aAEhC,WA3Gf,mBA8GI,WAAiB,IAAD,EACZ,iBAAOkO,GAAW3E,KAAK7M,KAAKqK,cAA5B,QAAsC,WA/G9C,oBAkHI,WAAkB,IAAD,EACb,iBAAOoH,GAAa5E,KAAK7M,KAAKsK,eAA9B,QAAyC,cAnHjD,KA8HA,IAAMkH,GAAa,CACf,IACA,MACA,KACA,SACA,QACA,IACA,OACA,WACA,WACA,OACA,OACA,UACA,SAGEC,GAAe,CACjB,QACA,gBACA,YACA,gBACA,YACA,aACA,YACA,UACA,aACA,QACA,QACA,kBACA,kBACA,YAGEF,GAAkB,CACpB,uCACA,uCACA,wCAGG,SAAST,GAAkBlR,GAAoC,IAAD,UAC3D8R,EAAQ,UAAG9R,EAAO8R,gBAAV,QAAsB,GAC9BC,EAAQ,UAAG/R,EAAO+R,gBAAV,QAAsB,GAC9BC,EAAQ,UAAGhS,EAAOgS,gBAAV,QAAsB,GAC9BC,EAAQ,UAAGjS,EAAOiS,gBAAV,QAAsB,GAC9BC,EAAQ,UAAGlS,EAAOkS,gBAAV,QAAsB,GACpC,MAAM,GAAN,mBAAWJ,GAAX,YAAwBI,GAAxB,YAAqCH,GAArC,YAAkDC,GAAlD,YAA+DC,IAG5D,SAASE,GACZ7J,GAEA,IADQ,EACFhJ,EAA+B,GAD7B,cAEQgJ,GAFR,IAER,2BAAyB,CAAC,IAAD,EAAdX,EAAc,sBACHuJ,GAAkBvJ,EAAEvH,OADjB,IACrB,2BAA6C,CACzCd,EADyC,UAC9B,GAFM,gCAFjB,8BAOR,OAAO8S,OAAOC,KAAK/S,G,iCClMjBgT,GAA8BC,oIAAYC,+BAAiC,kCAS1E,SAAeC,GAAtB,mC,gDAAO,WAA+BC,GAA/B,kCAAAhR,EAAA,sEACoCiR,QAAQC,IAAI,CAC/CC,GAAoBH,GACpBI,GAAWJ,KAHZ,gEACKpK,EADL,KACckI,EADd,KACqB/Q,EADrB,KAMGsT,EAAUX,OAAOY,YACnBvT,EAAMH,KAAI,SAACwR,GAAD,MAAO,CAACA,EAAE3Q,SAAU2Q,EAAE1Q,UAE9B6S,EAAYzT,EAAsBC,GAClCyT,EAASd,OAAOY,YAAYxC,EAAKlR,KAAI,SAAC6T,GAAD,MAAO,CAACA,EAAE3Q,GAAI2Q,OACnDC,EAAgBhB,OAAOY,YACzB1K,EAAQhJ,KAAI,SAACqI,GAAD,MAAO,CACfA,EAAExH,SACF,IAAImQ,GAAO3I,EAAGoL,EAASE,QAd5B,kBAkBI,CACH3K,QAAS8K,EACT3T,MAAOsT,EACPxC,OAAQ0C,EACRzC,KAAM0C,IAtBP,6C,+BA0BQL,G,mFAAf,WACIH,GADJ,oBAAAhR,EAAA,sEAG0B2R,GAA+B,SAAUX,GAHnE,cAGUpK,EAHV,OAIUgL,EAASnB,GAAa7J,GACtBkI,EAAoB+C,GAAWtN,QAAO,SAAAvE,GAAC,OAA8B,IAA1B4R,EAAO7J,QAAQ/H,EAAEc,OALtE,kBAMW,CAAC8F,EAASkI,IANrB,4C,+BASesC,G,mFAAf,WACIJ,GADJ,UAAAhR,EAAA,sEAGiB2R,GAA6B,OAAQX,GAHtD,oF,+BAMeW,G,qFAAf,WACIvG,EAAc4F,GADlB,0BAAAhR,EAAA,sDAGU8R,EAAiC,GACjCC,EAAiBC,SAASC,SAAUC,OAAQC,MAAM,MAAMhD,MAAK,SAAAiD,GAAG,OAAIA,EAAIlT,WAAW,iBAAgBiT,MAAM,KAAK,IACpHnB,EAAK,IAAIqB,MAAM,IAAIA,MAAOC,UAAqB,IAATP,GAAgBQ,cAL1D,mBAOQT,EAPR,SAOyBU,GACbC,KAAYC,aAAa,CACrBC,IAAK/B,GAAsB,eAC3BgC,MAAO,CACHxH,KAAMA,EACN4F,GAAE,UAAEA,SAAF,aAAQxT,EACVgK,KAAI,oBAAEsK,EAAMA,EAAM1T,OAAS,UAAvB,aAAE,EAAyByU,gBAA3B,aAAuCrV,MAb/D,wBAOcV,KAPd,oCAiBagV,EAAMA,EAAM1T,OAAS,UAjBlC,aAiBa,EAAyByU,SAjBtC,gDAkBWf,EAAMvI,SAAQ,SAAC/B,GAAD,OAAUA,EAAKpF,UAlBxC,6C,+BAqBeoQ,G,mFAAf,WAA4BG,GAA5B,gBAAA3S,EAAA,sEACuB8S,MAAMH,EAAK,CAC1BI,KAAM,SAFd,cACUC,EADV,gBAIkBA,EAAKC,OAJvB,oF,sBCvEO,SAASC,KACZ,IACQxU,EAASyU,aAAO,cAAD,OADZ,MACY,wBAEnB,uBAAAnT,EAAA,sEAAkB+Q,GAHX,MAGP,mFACAqC,IAHI1U,KAKR,cAAOA,QAAP,IAAOA,IAAQ,KAGnB,IAAM0U,GAAc,CAChBC,mBAAmB,EACnBC,sBAAuB,KACvBC,uBAAuB,EACvBC,oBAAoB,EACpBC,mBAAmB,EACnBC,gBAAiB,GCuDNC,OA3Ef,WACI,IAAMjV,EAAOwU,KACPU,EAAUpU,GAAe,SAACe,GAAD,OAAWA,EAAMsT,gBAFd,EAGPC,sBAAYF,EAAS,KAAzCG,EAH2B,oBAK5BC,EAAkBrM,mBAAQ,WAC5B,OAAKjJ,GAcTkI,EAZQ8J,OAAOuD,OAAOvV,EAAKkI,SAa3Bf,EAZQ+N,EAcDhN,EAAQrC,QAAO,SAAC0B,GAAO,IAAD,EAsC7B9H,EACA+V,EAOiBC,EAA4BC,EA7CzC,QAWR,SAAmBrW,EAAsBsW,GACrC,IAAKA,EAAYjW,OAAQ,OAAO,EADqC,oBAElDL,GAFkD,IAErE,2BAA0B,CAAC,IAAhBS,EAAe,QACtB,IAA0C,IAAtC6V,EAAYtM,QAAQvJ,EAAKP,QAAgB,OAAO,GAHa,8BAKrE,OAAO,EAhBEqW,CAAUrO,EAAElI,MAAO8H,EAAQ9H,UAmBxC,SAAmBkR,EAAiBsF,GAChC,IAAKA,EAAQ,OAAO,EADqC,oBAEtCtF,GAFsC,IAEzD,2BACI,GADsB,QACbuF,oBAAoB5T,SAAS2T,EAAOC,qBACzC,OAAO,EAJ0C,8BAMzD,OAAO,EAxBEC,CAAUxO,EAAEgJ,MAAOpJ,EAAQ0O,WA2BxC,SAAmBzF,EAAgB4F,GAC/B,IAAKA,EAAWtW,OAAQ,OAAO,EAD+B,oBAEtCsW,GAFsC,IAE9D,2BAAoC,CAAC,IAA1BC,EAAyB,QAChC,GAAI7F,EAAK/G,QAAQ4M,IAAc,EAAG,OAAO,GAHiB,8BAK9D,OAAO,EA/BEC,CAAU3O,EAAE6I,KAAMjJ,EAAQiJ,QAmCnC3Q,EAlCuB,UAAC8H,EAAElE,gBAAH,aAAC,EAAY5D,YAmCpC+V,EAnC8CrO,EAAQgP,WAqCjCzW,UAChBD,GACE+V,EAAgBnM,QAAQ5J,IAAa,MAG3BgW,EAxCIlO,EAAEkO,YAwCsBC,EAxCZvO,EAAQiP,UAyCvB1W,UACb+V,GACEC,EAAarM,QAAQoM,IAAW,UAlEjB,KAClB,IAaJvN,EACAf,IATG,CAACnH,EAAMqV,IAEV,OAAKC,EAEE,cAAC5M,EAAD,CAAaR,QAASoN,EAAiBlK,SAAU,KAF3B,8C,SCmBpBiL,GAAoBrO,YAAY,CACzClF,KAAM,UACNmF,aArBiB,CACjBe,QAAS,CACLG,UAAU,EACVrJ,MAAM,EACNL,UAAU,EACViE,OAAO,EACPgG,SAAS,EACTC,UAAU,EACVC,aAAa,EACbC,SAAS,EACTC,WAAW,EACXE,MAAM,GAEVrE,sBAAsB,EACtBmB,cAAc,EACd2C,mBAAmB,EACnB7G,sBAAsB,GAMtBuF,SAAU,CACNmO,UAAW,SACPzU,EACAwG,GAEAxG,EAAMmH,QAAQX,EAAOC,QAAQM,QAAUP,EAAOC,QAAQ7C,OAE1D8Q,gBAAiB,SAAC1U,EAAOwG,GACrBxG,EAAMiF,aAAeuB,EAAOC,SAEhCkO,qBAAsB,SAAC3U,EAAOwG,GAC1BxG,EAAM4H,kBAAoBpB,EAAOC,SAErCmO,wBAAyB,SAAC5U,EAAOwG,GAC7BxG,EAAM8D,qBAAuB0C,EAAOC,SAExCoO,wBAAyB,SAAC7U,EAAOwG,GAC7BxG,EAAMe,qBAAuByF,EAAOC,Y,GAW5C+N,GAAkB5N,QALlB6N,G,GAAAA,UACAC,G,GAAAA,gBACAC,G,GAAAA,qBACAC,G,GAAAA,wBACAC,G,GAAAA,wBC/CWC,OAtBf,SAAwB9Y,GAMpB,OACI,sBAAKW,UAAU,aAAf,UACI,uBACIA,UAAU,mBACVkO,KAAK,WACLF,QAAS3O,EAAM4H,MACfrD,GAAIvE,EAAMuE,GACVuK,SAAU,SAACtK,GAAD,OAAOxE,EAAM+Y,SAASvU,EAAEK,OAAO8J,YAE7C,uBAAOhO,UAAU,mBAAmBqY,QAAShZ,EAAMuE,GAAnD,SACKvE,EAAMiZ,eCkCRC,OA1Cf,WACI,IAAMxK,EAAW3L,IACXgH,EAAO9G,GAAe,SAACe,GAAD,OAAWA,EAAMgB,gBAE7C,OACI,sBAAKrE,UAAU,OAAf,UACI,cAAC,GAAD,CACI4D,GAAG,iBACHqD,MAAOmC,EAAK6B,kBACZmN,SAAU,SAACI,GAAD,OAASzK,EAASiK,GAAqBQ,KAHrD,iCAQA,cAAC,GAAD,CACI5U,GAAG,aACHqD,MAAOmC,EAAKd,aACZ8P,SAAU,SAACI,GAAD,OAASzK,EAASgK,GAAgBS,KAHhD,mCAQA,cAAC,GAAD,CACI5U,GAAG,iBACHqD,MAAOmC,EAAKjC,qBACZiR,SAAU,SAACI,GAAD,OAASzK,EAASkK,GAAwBO,KAHxD,oCASA,cAAC,GAAD,CACI5U,GAAG,kBACHqD,MAAOmC,EAAKhF,qBACZgU,SAAU,SAACI,GAAD,OAASzK,EAASmK,GAAwBM,KAHxD,wCCJGC,OAnCf,WACI,OACI,qBAAIzY,UAAU,4BAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,KAAD,CACIA,UAAU,WACV0Y,gBAAgB,SAChBC,GAAG,IACHC,OAAK,EAJT,2BASJ,oBAAI5Y,UAAU,WAAd,SACI,cAAC,KAAD,CACIA,UAAU,WACV0Y,gBAAgB,SAChBC,GAAG,QAHP,2BAQJ,oBAAI3Y,UAAU,WAAd,SACI,cAAC,KAAD,CACIA,UAAU,WACV0Y,gBAAgB,SAChBC,GAAG,SAHP,iCCPHE,GAAoBrP,YAAY,CACzClF,KAAM,eACNmF,aAViB,CACjB4N,OAAQ,GACRxW,MAAO,GACP+Q,KAAM,GACN+F,UAAW,GACXC,SAAU,IAMVjO,SAAU,CACNmP,UAAW,SAACzV,EAAOwG,GACfxG,EAAMgU,OAASxN,EAAOC,SAE1BiP,SAAU,SAAC1V,EAAOwG,GACdxG,EAAMxC,MAAQgJ,EAAOC,SAEzBkP,QAAS,SAAC3V,EAAOwG,GACbxG,EAAMuO,KAAO/H,EAAOC,SAExBmP,aAAc,SAAC5V,EAAOwG,GAClBxG,EAAMsU,UAAY9N,EAAOC,SAE7BoP,YAAa,SAAC7V,EAAOwG,GACjBxG,EAAMuU,SAAW/N,EAAOC,Y,GAWhC+O,GAAkB5O,QALlB6O,G,GAAAA,UACAC,G,GAAAA,SACAC,G,GAAAA,QACAC,G,GAAAA,aACAC,G,GAAAA,Y,SCCWC,OA3Cf,SAAwB9Z,GAIP,IAAD,EACNmC,EAAOwU,KAEPrN,EAAU6K,OAAOuD,OAAP,iBAAcvV,QAAd,IAAcA,OAAd,EAAcA,EAAMoQ,YAApB,QAA4B,IAAIlR,KAAI,SAACgS,GAAD,MAAU,CAC1DzL,MAAOyL,EAAI9O,GACX8J,MAAOgF,EAAIhF,MACX0L,YAAa1G,EAAI0G,gBAErBzQ,EAAQ9F,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE4K,MAAMtK,cAAcL,EAAE2K,UAE/C,IAAM2L,EAAkB1Q,EAAQtB,QAAO,SAACiS,GAAD,OAAOja,EAAMuS,KAAKlO,SAAS4V,EAAErS,UAEpE,OACI,cAAC,KAAD,CACIrD,GAAIvE,EAAMuE,GACV2V,SAAO,EACP5Q,QAASA,EACT1B,MAAOoS,EACPG,eAAgB,SAAC9G,GAAD,OAASA,EAAIhF,OAC7B+L,kBAAmB,SAACC,EAAD,GAA0B,IAAfC,EAAc,EAAdA,QAC1B,OACI,iCACKD,EAAOhM,MAAO,IACF,SAAZiM,GACG,qBAAK3Z,UAAU,mBAAf,SACK0Z,EAAON,kBAM5BjL,SAAU,SAACyL,GACP,IAAMhI,EAAOgI,EAASlZ,KAAI,SAACgG,GAAD,OAAUA,EAAKO,SACzC5H,EAAM2Z,QAAQpH,OC1BvB,SAASiI,GAAWxa,GAMvB,IAAMmC,EAAOwU,KACb,IAAKxU,EAAM,OAAO,KAElB,IAAMsY,EAAclX,EAAUJ,EAAW9B,KAAI,SAACkD,GAAD,OAAQpC,EAAKX,MAAM+C,MAAKyD,QAAO,SAAAvE,GAAC,YAAUxC,IAANwC,MAC3EiX,EAAcnX,EAAUH,EAAc/B,KAAI,SAACkD,GAAD,OAAQpC,EAAKX,MAAM+C,MAAKyD,QAAO,SAAAvE,GAAC,YAAUxC,IAANwC,MAC9EkX,EAAetX,EAAehC,KAAI,SAACkD,GAAD,OAAQpC,EAAKX,MAAM+C,MAAKyD,QAAO,SAAAvE,GAAC,YAAUxC,IAANwC,KACtEmX,EAAerX,EACjBD,EAAejC,KAAI,SAACkD,GAAD,OAAQpC,EAAKX,MAAM+C,MAAKyD,QAAO,SAAC6K,GAAD,QAASA,MAC7D7K,QAAO,SAAAvE,GAAC,YAAUxC,IAANwC,KACRoX,EAAetX,EACjB4Q,OAAOC,KAAKjS,EAAKX,OACZwG,QAAO,SAAC6K,GAAD,OAA0B,OAAnBzO,EAAYyO,MAC1BxR,KAAI,SAACkD,GAAD,OAAQpC,EAAKX,MAAM+C,OAG1B+E,EAAU,CACZ,CAAEwR,MAAO,MAAOxR,QAASmR,GACzB,CAAEK,MAAO,UAAWxR,QAASsR,GAC7B,CAAEE,MAAO,aAAcxR,QAASoR,GAChC,CAAEI,MAAO,UAAWxR,QAASqR,IAG7BE,EAAahZ,QACbyH,EAAQ/I,KAAK,CAAEua,MAAO,SAAUxR,QAASuR,IAgB7C,OACI,cAAC,KAAD,CACIX,QAASla,EAAM+a,MACfxW,GAAIvE,EAAMuE,GACV+E,QAASA,EACT1B,MAAO5H,EAAMwB,MAAMH,KAAI,SAACkD,GAAD,OAAQpC,EAAKX,MAAM+C,MAC1C4V,eAAgB,SAAClY,GAAD,OAAU2B,EAAY3B,GAAMkC,UAC5CiW,kBApBkB,SACtBC,EACA9O,GAEA,IAAMlG,EAAWzB,EAAYyW,GAC7B,OACI,iCACI,sBAAM1Z,UAAU,QAAhB,SAAyB8B,EAAW4X,EAAO3X,UAC1C6I,EAAK+O,QAAqBjV,EAASvB,cAaxCgL,SAAU,SAAClH,GAEP,GAAIoT,MAAMC,QAAQrT,GAAQ,CACtB,IAAMpG,EAAQoG,EAAMvG,KAAI,SAACgG,GAAD,OAAUA,EAAK9C,MACvCvE,EAAM0Z,SAASlY,QAEfxB,EAAM0Z,SAAS9R,EAAQ,CAAEA,EAAwBrD,IAAM,OChD3E,SAAS2W,KACL,IAAMxM,EAAW3L,IACXiV,EAAS/U,GAAe,SAACe,GAAD,OAAWA,EAAMsT,aAAaU,UAE5D,OACI,sBAAKrX,UAAU,OAAf,UACI,uBAAOqY,QAAQ,qBAAqBrY,UAAU,aAA9C,oBAGA,uBACI4D,GAAG,qBACHsK,KAAK,OACLlO,UAAU,eACViH,MAAOoQ,EACPlJ,SAAU,SAACtK,GAAD,OAAOkK,EAAS+K,GAAUjV,EAAEK,OAAO+C,SAC7CuT,YAAY,yBAM5B,SAASC,KACL,IAAM1M,EAAW3L,IACXsY,EAAWpY,GAAe,SAACe,GAAD,OAAWA,EAAMsT,aAAa9V,SAE9D,OACI,sBAAKb,UAAU,OAAf,UACI,uBAAOqY,QAAQ,cAAcrY,UAAU,aAAvC,kBAGA,cAAC6Z,GAAD,CACIjW,GAAG,cACHwW,OAAO,EACPvZ,MAAO6Z,EACP3B,SAAU,SAAClY,GAAD,OAAWkN,EAASgL,GAASlY,UAMvD,SAAS8Z,KACL,IAAM5M,EAAW3L,IAEjB,OACI,sBAAKpC,UAAU,OAAf,UACI,uBAAOqY,QAAQ,kBAAkBrY,UAAU,aAA3C,sBAGA,cAAC,KAAD,CACI4D,GAAG,kBACH2V,SAAO,EACP5Q,QAAS,CACL,CAAE1B,MAAO,SAAUkT,MAAO,UAC1B,CAAElT,MAAO,WAAYkT,MAAO,YAC5B,CAAElT,MAAO,UAAWkT,MAAO,YAE/BhM,SAAU,SAACyL,GACP,IAAMjC,EAAYiC,EAASlZ,KAAI,SAACgG,GAAD,OAAUA,EAAKO,SAC9C8G,EAASkL,GAAatB,UAO1C,SAASiD,KACL,IAAM7M,EAAW3L,IACXsY,EAAWpY,GAAe,SAACe,GAAD,OAAWA,EAAMsT,aAAa/E,QAE9D,OACI,sBAAK5R,UAAU,OAAf,UACI,uBAAOqY,QAAQ,cAAcrY,UAAU,aAAvC,0BAGA,cAAC,GAAD,CACI4D,GAAG,cACHgO,KAAM8I,EACN1B,QAAS,SAAC6B,GAAD,OAAa9M,EAASiL,GAAQ6B,UAMvD,SAASC,KACL,IAAM/M,EAAW3L,IAEjB,OACI,sBAAKpC,UAAU,OAAf,UACI,uBAAOqY,QAAQ,gBAAgBrY,UAAU,aAAzC,oBAGA,cAAC,KAAD,CACI4D,GAAG,gBACH2V,SAAO,EACP5Q,QAAS,CACL,CAAE1B,MAAO,SAAUkT,MAAO,UAC1B,CAAElT,MAAO,WAAYkT,MAAO,YAC5B,CAAElT,MAAO,UAAWkT,MAAO,WAC3B,CAAElT,MAAO,aAAckT,MAAO,cAC9B,CAAElT,MAAO,UAAWkT,MAAO,gBAE/BhM,SAAU,SAACyL,GACP,IAAMhC,EAAWgC,EAASlZ,KAAI,SAACgG,GAAD,OAAUA,EAAKO,SAC7C8G,EAASmL,GAAYtB,UAO1BmD,OA1Hf,WACI,OACI,sBAAK/a,UAAU,kBAAf,UACI,cAACua,GAAD,IACA,cAACK,GAAD,IACA,cAACD,GAAD,IACA,cAACF,GAAD,IACA,cAACK,GAAD,QCfL,SAASE,KACZ,IAAMC,EAAW3Y,GACb,SAACe,GAAD,OAAWA,EAAMgB,aAAa4G,qBAGlC,OACI,gCACI,qBAAKjL,UAAU,aAAf,0BACA,cAACkb,GAAD,CAAgB9Q,OAAO,WAAvB,gBACA,cAAC8Q,GAAD,CAAgB9Q,OAAO,OAAvB,kBACA,cAAC8Q,GAAD,CAAgB9Q,OAAO,WAAvB,sBACA,cAAC8Q,GAAD,CAAgB9Q,OAAO,QAAvB,mBACA,cAAC8Q,GAAD,CAAgB9Q,OAAO,UAAvB,qBACA,cAAC8Q,GAAD,CAAgB9Q,OAAO,WAAvB,sBACA,cAAC8Q,GAAD,CAAgB9Q,OAAO,cAAvB,yBACA,cAAC8Q,GAAD,CAAgB9Q,OAAO,UAAvB,qBACC6Q,GACG,cAACC,GAAD,CAAgB9Q,OAAO,YAAvB,mBAEJ,cAAC8Q,GAAD,CAAgB9Q,OAAO,OAAvB,qBAKZ,SAAS8Q,GAAe7b,GACpB,IAAM0O,EAAW3L,IACXoI,EAAUlI,GAAe,SAACe,GAAD,OAAWA,EAAMgB,aAAamG,WAE7D,OACI,cAAC,GAAD,CACI5G,GAAE,iBAAYvE,EAAM+K,QACpBnD,MAAOuD,EAAQnL,EAAM+K,QACrBgO,SAAU,SAACnR,GACP8G,EAAS+J,GAAU,CAAE1N,OAAQ/K,EAAM+K,OAAQnD,YAJnD,SAOK5H,EAAMiZ,WCRnB,SAAS6C,KACL,IAAMC,EAAUC,cACRC,EAASC,cAATD,KAEF9Z,EAAOwU,KACb,IAAKxU,EAAM,OAAO,KAElB,IAAMga,EAAehI,OAAOuD,OAAOvV,EAAKX,OAAOoR,MAC3C,SAACC,GAAD,OAAOA,EAAEuJ,YAAcH,KAG3B,OACI,qBAAKtb,UAAU,kBAAf,SACI,sBAAKA,UAAU,OAAf,UACI,uBAAOqY,QAAQ,cAAcrY,UAAU,aAAvC,kBAGA,cAAC6Z,GAAD,CACIjW,GAAG,cACHwW,OAAO,EACPvZ,MAAO2a,EAAe,CAACA,EAAa5X,IAAM,GAC1CmV,SAAU,SAAC2C,GACP,IAAMC,EAAcna,EAAKX,MAAM6a,EAAS,IACxCN,EAAQxb,KAAR,gBAAsB+b,EAAYF,oBAQ3CG,OAvDf,WACI,OACI,gCACI,qBAAK5b,UAAU,kBAAf,SACI,cAAC,GAAD,MAGJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAO6b,KAAK,IAAIjD,OAAK,EAArB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOiD,KAAK,cAAZ,SACI,cAACV,GAAD,SAIR,sBAAKnb,UAAU,kBAAf,UACI,cAAC,GAAD,IACA,cAACgb,GAAD,WCPDc,OAff,WACI,IAAMta,EAAOwU,KACPhV,EAAYsB,GAAe,SAACe,GAAD,OAAWA,EAAM4K,aAAavE,WAE/D,IAAKlI,EAAM,OAAO,8CAClB,IAAMkI,EAAU1I,EAAUN,KAAI,SAACkD,GAAD,OAAQpC,EAAKkI,QAAQ9F,MAEnD,OACI,gCACI,+CACA,cAACsG,EAAD,CAAaR,QAASA,QCwBnBqS,OAlCf,WAAwC,IAAD,MAC3BT,EAASC,cAATD,KACF9Z,EAAOwU,KACb,GAAa,OAATxU,EAAe,OAAO,0CAE1B,IAAMF,EAAOkS,OAAOuD,OAAOvV,EAAKX,OAAOoR,MAAK,SAACC,GAAD,OAAOA,EAAEuJ,YAAcH,KACnE,OAAY,MAARha,EAAqB,iDAGrB,gCACI,sBAAKtB,UAAU,OAAf,UACI,wCACA,cAACkK,EAAD,CACIR,QAASpI,EAAKG,OAAOf,KAAI,SAACkD,GAAD,OAAQpC,EAAKkI,QAAQ9F,WAGtD,sBAAK5D,UAAU,OAAf,UACI,0CACA,cAACkK,EAAD,CACIR,QAASpI,EAAKI,SAAShB,KAAI,SAACkD,GAAD,OAAQpC,EAAKkI,QAAQ9F,WAGxD,sBAAK5D,UAAU,OAAf,UACI,yCACA,cAACkK,EAAD,CACIR,SAAS,UAACpI,EAAKO,eAAN,wCAAsBP,EAAKK,aAA3B,QAAoC,IAApC,sBAA6CL,EAAKM,eAAlD,QAA6D,MAAMlB,KACxE,SAACkD,GAAD,OAAQpC,EAAKkI,QAAQ9F,eCO9BoY,OA9Bf,WACI,OACI,cAAC,KAAD,CAAeC,SAAS,mBAAxB,SACI,qBAAKjc,UAAU,kBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,cAAC,GAAD,MAEJ,qBAAKA,UAAU,0BAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO6b,KAAK,SAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACI,cAAC,IAAD,CAAUlD,GAAG,iBAEjB,cAAC,IAAD,CAAOkD,KAAK,IAAZ,SACI,cAAC,GAAD,mBCpBnBK,I,kBAAkB1S,YAAY,CACvClF,KAAM,cACNmF,aAJiB,CAAE0S,OAAQ,IAK3BxS,SAAU,CACNyS,OAAQ,SAAC/Y,EAAOwG,GACRxG,EAAM8Y,OAAOzY,SAASmG,EAAOC,SAC7BzG,EAAM8Y,OAAS9Y,EAAM8Y,OAAO9U,QAAO,SAACzD,GAAD,OAAQA,IAAOiG,EAAOC,WAGzDzG,EAAM8Y,OAAOvc,KAAKiK,EAAOC,UAGjCE,MAAO,SAAC3G,GACJA,EAAM8Y,OAAS,Q,GAKMD,GAAgBjS,QCpBpCoS,I,GDoBED,O,GAAQpS,MCpBFsS,YAAe,CAChCC,QAAS,CACLtO,aAAc1E,EAAkBgT,QAChClY,aAAcwT,GAAkB0E,QAChC5F,aAAckC,GAAkB0D,QAChCtX,YAAaiX,GAAgBK,YCArCC,IAAStT,OACL,cAAC,IAAD,CAAUmT,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJtH,SAAS0H,eAAe,U","file":"static/js/main.d747d455.chunk.js","sourcesContent":["import clsx from \"clsx\";\n\nexport interface PaginationProps {\n    pageIndex: number;\n    pageCount: number;\n    gotoPage: (page: number) => void;\n}\n\nfunction Pagination(props: PaginationProps): JSX.Element | null {\n    const canGoPrev = props.pageIndex > 0;\n    const canGoNext = props.pageIndex < props.pageCount - 1;\n\n    const pageIndices = [];\n    for (let i = 0; i < props.pageCount; i++) pageIndices.push(i);\n\n    if (props.pageCount <= 1) return null;\n\n    const actualPage = Math.min(props.pageCount - 1, props.pageIndex);\n\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                <li className={clsx(\"page-item\", !canGoPrev && \"disabled\")}>\n                    <a\n                        className=\"page-link\"\n                        href=\"#\"\n                        aria-label=\"Previous\"\n                        aria-disabled={!canGoPrev}\n                        tabIndex={canGoPrev ? undefined : -1}\n                        onClick={() => props.gotoPage(props.pageIndex - 1)}\n                    >\n                        <span aria-hidden=\"true\">&laquo;</span>\n                    </a>\n                </li>\n                {pageIndices.map((idx) => (\n                    <li\n                        key={idx}\n                        className={clsx(\n                            \"page-item\",\n                            actualPage === idx && \"active\"\n                        )}\n                    >\n                        <a\n                            className=\"page-link\"\n                            href=\"#\"\n                            onClick={() => props.gotoPage(idx)}\n                        >\n                            {idx + 1}\n                        </a>\n                    </li>\n                ))}\n                <li className={clsx(\"page-item\", !canGoNext && \"disabled\")}>\n                    <a\n                        className=\"page-link\"\n                        href=\"#\"\n                        aria-label=\"Next\"\n                        aria-disabled={!canGoNext}\n                        tabIndex={canGoNext ? undefined : -1}\n                        onClick={() => props.gotoPage(props.pageIndex + 1)}\n                    >\n                        <span aria-hidden=\"true\">&raquo;</span>\n                    </a>\n                </li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Pagination;\n","import { BlaseballTeam, ChroniclerEntity } from \"./api/types\";\nimport { Player, RosterEntry, TeamPosition } from \"./models/Player\";\n\nexport function generatePlayerTeamMap(\n    teams: ChroniclerEntity<BlaseballTeam>[]\n): Record<string, RosterEntry[]> {\n    const map: Record<string, RosterEntry[]> = {};\n\n    function add(teamId: string, playerIds: string[], position: TeamPosition) {\n        for (let i = 0; i < playerIds.length; i++) {\n            const playerId = playerIds[i];\n            if (!map[playerId]) map[playerId] = [];\n            map[playerId].push({\n                player: playerId,\n                teamId: teamId,\n                position: position,\n                index: i,\n            });\n        }\n    }\n\n    for (const team of teams) {\n        add(team.entityId, team.data.lineup, \"lineup\");\n        add(team.entityId, team.data.rotation, \"rotation\");\n        add(team.entityId, team.data.bench ?? [], \"shadows\");\n        add(team.entityId, team.data.bullpen ?? [], \"shadows\");\n        add(team.entityId, team.data.shadows ?? [], \"shadows\");\n    }\n\n    return map;\n}\n\nexport function parseEmoji(emoji: string): string {\n    return emoji.startsWith(\"0x\") ? String.fromCodePoint(Number(emoji)) : emoji;\n}\n\nexport function positionSortKey(meta: Player): number {\n    const team = meta.mainTeam;\n    if (!team) return 1000000;\n\n    return (\n        [\"lineup\", \"rotation\", \"shadows\"].indexOf(team.position) * 1000 +\n        team.index\n    );\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"./store/store\";\n\n// eslint-disable-next-line\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { BlaseballTeam } from \"./api/types\";\n\nexport type TeamType =\n    | \"league\"\n    | \"coffee\"\n    | \"special\"\n    | \"library\"\n    | \"deprecated\";\n\nexport const ilbTeamIds = [\n    \"105bc3ff-1320-4e37-8ef0-8d595cb95dd0\",\n    \"23e4cbc1-e9cd-47fa-a35b-bfa06f726cb7\",\n    \"36569151-a2fb-43c1-9df7-2df512424c82\",\n    \"3f8bbb15-61c0-4e3f-8e4a-907a5fb1565e\",\n    \"46358869-dce9-4a01-bfba-ac24fc56f57e\",\n    \"57ec08cc-0411-4643-b304-0e80dbc15ac7\",\n    \"747b8e4a-7e50-4638-a973-ea7950a3e739\",\n    \"7966eb04-efcc-499b-8f03-d13916330531\",\n    \"878c1bf6-0d21-4659-bfee-916c8314d69c\",\n    \"8d87c468-699a-47a8-b40d-cfb73a5660ad\",\n    \"979aee4a-6d80-4863-bf1c-ee1a78e06024\",\n    \"9debc64f-74b7-4ae1-a4d6-fce0144b6ea5\",\n    \"a37f9158-7f82-46bc-908c-c9e2dda7c33b\",\n    \"adc5b394-8f76-416d-9ce9-813706877b84\",\n    \"b024e975-1c4a-4575-8936-a3754a08806a\",\n    \"b63be8c2-576a-4d6e-8daf-814f8bcea96f\",\n    \"b72f3061-f573-40d7-832a-5ad475bd7909\",\n    \"bb4a9de5-c924-4923-a0cb-9d1445f1ee5d\",\n    \"bfd38797-8404-4b38-8b82-341da28b1f83\",\n    \"c73b705c-40ad-4633-a6ed-d357ee2e2bcf\",\n    \"ca3f1c8c-c025-4d8e-8eef-5be6accbeb16\",\n    \"d9f89a8a-c563-493e-9d64-78e4f9a55d4a\",\n    \"eb67ae5e-c4bf-46ca-bbbc-425cd34182ff\",\n    \"f02aeae2-5e6a-4098-9842-02d2273f25c7\",\n];\n\nexport const coffeeTeamIds = [\n    \"49181b72-7f1c-4f1c-929f-928d763ad7fb\",\n    \"4d921519-410b-41e2-882e-9726a4e54a6a\",\n    \"4e5d0063-73b4-440a-b2d1-214a7345cf16\",\n    \"70eab4ab-6cb1-41e7-ac8b-1050ee12eecc\",\n    \"9a5ab308-41f2-4889-a3c3-733b9aab806e\",\n    \"9e42c12a-7561-42a2-b2d0-7cf81a817a5e\",\n    \"a3ea6358-ce03-4f23-85f9-deb38cb81b20\",\n    \"a7592bd7-1d3c-4ffb-8b3a-0b1e4bc321fd\",\n    \"b3b9636a-f88a-47dc-a91d-86ecc79f9934\",\n    \"d8f82163-2e74-496b-8e4b-2ab35b2d3ff1\",\n    \"e3f90fa1-0bbe-40df-88ce-578d0723a23b\",\n    \"e8f7ffee-ec53-4fe0-8e87-ea8ff1d0b4a9\",\n    \"f29d6e60-8fce-4ac6-8bc2-b5e3cabc5696\",\n];\n\nexport const specialTeamIds = [\n    \"698cfc6d-e95e-4391-b754-b87337e4d2a9\", // Vault Legends\n    \"280c587b-e8f6-4a7e-a8ce-fd2fa2fa3e70\", // Rising Stars\n    \"d2634113-b650-47b9-ad95-673f8e28e687\", // Data Witches\n    \"3b0a289b-aebd-493c-bc11-96793e7216d5\", // Artists\n    \"7fcb63bc-11f2-40b9-b465-f1d458692a63\", // Game Band\n    \"c6c01051-cdd4-47d6-8a98-bb5b754f937f\", // Hall Stars\n    \"40b9ec2a-cb43-4dbb-b836-5accb62e7c20\", // PODS\n];\n\nexport const libraryTeamIds = [\n    \"88151292-6c12-4fb8-b2d6-3e64821293b3\", // Alaskan Immortals\n    \"54d0d0f2-16e0-42a0-9fff-79cfa7c4a157\", // Antarctic Fireballs\n    \"9494152b-99f6-4adb-9573-f9e084bc813f\", // Baltimore Crabs (alt)\n    \"cfd20759-5f9c-4596-9493-2669b6daf396\", // Beijing Bicycles\n    \"939db13f-79c9-41c5-9a15-b340b1bea875\", // Boulders Bay Birds\n    \"67c0a873-ef6d-4a85-8293-af638edf3c9f\", // Busan Bison\n    \"d6a352fc-b675-40a0-864d-f4fd50aaeea0\", // Canada Artists\n    \"ed60c164-fd31-42ff-8ae1-70220626f5a7\", // Canberra Drop Bears\n    \"2e22beba-8e36-42ba-a8bf-975683c52b5f\", // Carolina Queens\n    \"55c9fee3-79c8-4467-8dfb-ff1e340aae8c\", // Dallas Cows\n    \"71c621eb-85dc-4bd7-a690-0c68c0e6fb90\", // Downward Dogs\n    \"74966fbd-5d77-48b1-8075-9bf197583775\", // Florence Rhinoceroses\n    \"4c192065-65d8-4010-8145-395f82d24ddf\", // Green Hill Hedgehogs\n    \"b6b5df8f-5602-4883-b47d-07e77ed9d5af\", // Laredo Excavators\n    \"00245773-6f25-43b1-a863-42b4068888f0\", // La Paz Llamas\n    \"26f947db-4e2a-41a5-896c-02cf8eb47af0\", // Lisbon Lynx\n    \"7bc12507-1a84-4921-9338-c1888d56dcd7\", // London Frogs\n    \"1e04e5cc-80a6-41c0-af0d-7292817eed79\", // Louisville Lobsters\n    \"d0762a7e-004b-48a9-a832-a993982b305b\", // Mallorca Whales\n    \"3a094991-4cbc-4786-b74c-688876d243f4\", // Maryland Squirrels\n    \"c19bb50b-9a22-4dd2-8200-bce639b1b239\", // Minneapolis Truckers\n    \"53d473fb-ffee-4fd3-aa1c-671228adc592\", // New Hampshire Eggplants\n    \"cbd44c06-231a-4d1a-bb7d-4170b06e566a\", // Oklahoma Heartthrobs\n    \"1a51664e-efec-45fa-b0ba-06d04c344628\", // Oregon Psychics\n    \"8e50d878-3dcd-4c27-9f1c-8d8f20f17077\", // Portland Otters\n    \"258f6389-aac1-43d2-b30a-4b4dde90d5eb\", // Kola Boar\n    \"a4b23784-0132-4813-b300-f7449cb06493\", // Phoenix Trunks\n    \"774762ee-c234-4c57-90a1-e1e69db3f6a7\", // Sao Paulo Parrots\n    \"4cd14d96-f817-41a3-af6c-2d3ed0dd20b7\", // San Diego Saltines\n    \"3543229a-668c-4ac9-b64a-588422481f12\", // Wyoming Dolphins\n];\n\nexport function sortTeams(teams: BlaseballTeam[]): BlaseballTeam[] {\n    return [...teams].sort((a, b) => {\n        const aName = getTeamName(a);\n        const bName = getTeamName(b);\n        return aName.nickname.localeCompare(bName.nickname);\n    });\n}\n\nexport function getTeamName(team: BlaseballTeam): {\n    location: string;\n    nickname: string;\n    fullName: string;\n} {\n    if (team?.state?.scattered) {\n        return {\n            location: team.state.scattered.location,\n            nickname: team.state.scattered.nickname,\n            fullName: team.state.scattered.fullName,\n        };\n    }\n\n    return {\n        location: team.location,\n        nickname: team.nickname,\n        fullName: team.fullName,\n    };\n}\n\nexport function getTeamType(teamId: string): TeamType | null {\n    // PODS is deprecated but still in the special list so\n    if (teamId == \"40b9ec2a-cb43-4dbb-b836-5accb62e7c20\") return \"deprecated\";\n\n    if (ilbTeamIds.includes(teamId)) return \"league\";\n    if (coffeeTeamIds.includes(teamId)) return \"coffee\";\n    if (specialTeamIds.includes(teamId)) return \"special\";\n    if (libraryTeamIds.includes(teamId)) return \"library\";\n    return null;\n}\n","import { Player, RosterEntry } from \"../../models/Player\";\nimport { parseEmoji } from \"../../utils\";\nimport Tooltip from \"rc-tooltip\";\nimport { useAppSelector } from \"../../hooks\";\nimport { getTeamName } from \"../../teams\";\n\nexport function PlayerID(props: { player: Player }): JSX.Element {\n    const id = props.player.id;\n    return (\n        <td\n            className=\"player-id\"\n            onClick={(e) => {\n                const sel = window.getSelection();\n                sel?.selectAllChildren(e.target as Node);\n            }}\n        >\n            <code>{id}</code>\n        </td>\n    );\n}\n\nexport function PlayerName(props: { player: Player }): JSX.Element {\n    const showUnscatteredNames = useAppSelector(\n        (state) => state.tableOptions.showUnscatteredNames\n    );\n\n    const id = props.player.id;\n    const name = props.player.name(showUnscatteredNames);\n\n    return (\n        <td className=\"player-name\">\n            <a target=\"_blank\" href={`https://blaseball.com/player/${id}`}>\n                {name}\n            </a>\n        </td>\n    );\n}\n\nexport function PlayerTeam(props: { player: Player }): JSX.Element {\n    function getTeamData(\n        player: Player\n    ): { emoji: string; name: string } | null {\n        const team = player.mainTeamData;\n        if (!team) {\n            if (player.data.deceased) return { emoji: \"💀\", name: \"The Hall\" };\n            return null;\n        }\n\n        const teamName = getTeamName(team);\n        return { emoji: parseEmoji(team.emoji), name: teamName.nickname };\n    }\n\n    const data = getTeamData(props.player);\n    return data ? (\n        <td className=\"player-team\">\n            <span className=\"emoji\">{data.emoji}</span> {data.name}\n        </td>\n    ) : (\n        <td className=\"player-team invalid\">-</td>\n    );\n}\n\nexport function PlayerPosition(props: { player: Player }): JSX.Element {\n    function getPositionName({\n        player,\n        team,\n    }: {\n        player: Player;\n        team: RosterEntry | null;\n    }) {\n        if (\n            !team ||\n            // player.data.deceased ||\n            player.hasMod(\"COFFEE_EXIT\", \"REDACTED\", \"STATIC\") ||\n            (player.hasMod(\"LEGENDARY\") && !player.hasMod(\"REPLICA\"))\n        )\n            return null;\n\n        if (team.position === \"lineup\") return \"Lineup\";\n        if (team.position === \"rotation\") return \"Rotation\";\n        if (team.position === \"shadows\") return \"Shadows\";\n    }\n    const { mainTeam } = props.player;\n    const position = getPositionName({ player: props.player, team: mainTeam });\n    return position ? (\n        <td className=\"player-position\">{position}</td>\n    ) : (\n        <td className=\"player-position invalid\">-</td>\n    );\n}\n\nexport function PlayerItem(props: { player: Player }): JSX.Element {\n    // const dispatch = useAppDispatch();\n    // const toShow = useAppSelector((state) => state.playerItems.toShow);\n    // const showItems = toShow.includes(props.player.id);\n\n    const playerItems = props.player.data.items;\n    type itemMap = {\n        [key: string]: string;\n    };\n    const rootNameMap: itemMap = {\n        Base: \"⬜\",\n        Bat: \"🏏\",\n        Board: \"🛹\",\n        Broom: \"🧹\",\n        Cannon: \"🔫\",\n        Cap: \"🧢\",\n        Cape: \"👗\",\n        Chair: \"🪑\",\n        Egg: \"🥚\",\n        Field: \"🔵\",\n        Glove: \"🧤\",\n        Helmet: \"⛑️\",\n        Jersey: \"👕\",\n        Necklace: \"📿\",\n        Phone: \"☎️\",\n        Pillow: \"🛏️\",\n        Potion: \"🧪\",\n        Quill: \"🪶\",\n        Ring: \"💍\",\n        Shoes: \"👟\",\n        Socks: \"🧦\",\n        Sunglasses: \"🕶️\",\n    };\n\n    const itemAmnt = playerItems ? playerItems.length : 0;\n    return itemAmnt > 0 ? (\n        <td>\n            {playerItems?.map((item) => {\n                return (\n                    <Tooltip\n                        placement=\"top\"\n                        overlay={\n                            <span\n                                className={\n                                    item.durability === -1\n                                        ? \"legendary-item-name\"\n                                        : \"\"\n                                }\n                            >\n                                {item.name}{\" \"}\n                                <i>\n                                    {item.durability === -1\n                                        ? \"(∞)\"\n                                        : item.health === 0\n                                        ? \"(broken)\"\n                                        : `(${item.health}/${item.durability})`}\n                                </i>\n                            </span>\n                        }\n                    >\n                        <div\n                            className={`item-icon ${\n                                item.durability === -1 ? \"legendary-item\" : \"\"\n                            }`}\n                        >\n                            {rootNameMap[item.root.name] ?? \"❔\"}\n                            {item.health === 0 ? (\n                                <span className=\"broken-item\">❌</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                    </Tooltip>\n                );\n            })}\n            {/* <button\n                onClick={() => dispatch(toggle(props.player.id))}\n                className=\"btn item-btn\"\n            >\n                {showItems ? \"▴\" : \"▾\"}\n            </button> */}\n        </td>\n    ) : (\n        <td>-</td>\n    );\n}\n","import clsx from \"clsx\";\nimport { CellComponent, CellProps } from \"./columns\";\nimport React from \"react\";\nimport Tooltip from \"rc-tooltip\";\nimport { useAppSelector } from \"../../hooks\";\nimport { StatName } from \"../../models/AdvancedStats\";\nimport { Stars } from \"../../models/Stars\";\nimport { Item } from \"../../models/Item\";\n\nfunction NumericStat(props: {\n    value: number | null;\n    items: Item[];\n    itemValue: (item: Item) => number;\n    tiers: number[];\n    inverse: boolean;\n}) {\n    if (props.value === null) return <td className=\"numeric-stat\">-</td>;\n\n    const applyItemAdjustments = useAppSelector(\n        (state) => state.tableOptions.applyItemAdjustments\n    );\n\n    const itemValues = applyItemAdjustments\n        ? props.items\n              .map((item) => ({\n                  item,\n                  value: props.itemValue(item),\n              }))\n              .filter((i) => i.value)\n        : [];\n\n    const itemValue = itemValues.reduce((a, b) => a + b.value, 0);\n    const value = props.value + itemValue;\n    const tier = getTier(value, props.tiers, props.inverse);\n\n    const tableCell = (\n        <td\n            className={clsx(\n                \"numeric-stat\",\n                `numeric-stat-${tier}`,\n                itemValue && \"numeric-stat-item\"\n            )}\n        >\n            {value.toFixed(3)}\n        </td>\n    );\n\n    if (itemValue) {\n        return (\n            <Tooltip\n                placement=\"top\"\n                overlay={\n                    <div>\n                        {itemValues.map((i) => {\n                            const sign = i.value > 0 ? \"+\" : \"\";\n                            return (\n                                <div key={i.item.data.id}>\n                                    <span className={i.item.data.durability === -1 ? 'legendary-item-name' : ''}>{i.item.data.name}</span>: {sign}\n                                    {i.value.toFixed(3)}\n                                </div>\n                            );\n                        })}\n                    </div>\n                }\n            >\n                {tableCell}\n            </Tooltip>\n        );\n    } else {\n        return tableCell;\n    }\n}\n\nexport function advancedStat(\n    stat: StatName,\n    tiers?: number[],\n    inverse?: boolean\n): CellComponent {\n    function Cell(props: CellProps) {\n        const value = props.player.stats.get(stat);\n\n        return (\n            <NumericStat\n                value={value}\n                items={props.player.items}\n                itemValue={(i) => i.stats.get(stat)}\n                tiers={tiers ?? attrTiers}\n                inverse={inverse ?? false}\n            />\n        );\n    }\n\n    return Cell;\n}\n\nexport function starStat(\n    accessor: (stars: Stars) => number,\n    tiers: number[]\n): CellComponent {\n    function Cell(props: CellProps) {\n        const useRealStars = useAppSelector(\n            (state) => state.tableOptions.useRealStars\n        );\n\n        const value = accessor(props.player.stars(useRealStars));\n\n        return (\n            <NumericStat\n                value={value}\n                items={props.player.items}\n                itemValue={(i) => accessor(i.stars)}\n                tiers={tiers}\n                inverse={false}\n            />\n        );\n    }\n\n    return Cell;\n}\n\nexport const attrTiers = [0.125, 0.35, 0.45, 0.75, 1.0];\nexport const starTiers = [1, 2, 3, 4, 5];\nexport const combinedStarTiers = [4, 8, 12, 16, 20];\n\nfunction getTier(value: number, tiers: number[], inverse: boolean): number {\n    const tierValue = inverse ? 1 - value : value;\n    for (let i = 0; i < tiers.length; i++) {\n        if (tierValue < tiers[i]) return i;\n    }\n    return tiers.length;\n}\n","import { TableOptionsSlice } from \"../../store/tableOptionsSlice\";\nimport { positionSortKey as getPositionSortKey } from \"../../utils\";\nimport {\n    PlayerName,\n    PlayerPosition,\n    PlayerTeam,\n    PlayerItem,\n    PlayerID,\n} from \"./cells\";\nimport {\n    advancedStat,\n    attrTiers,\n    combinedStarTiers,\n    starStat,\n    starTiers,\n} from \"./stats\";\nimport { Player } from \"../../models/Player\";\nimport { StatName } from \"../../models/AdvancedStats\";\nimport { Stars } from \"../../models/Stars\";\n\nexport function getColumns(opts: TableOptionsSlice): ColumnGroup[] {\n    const cols = opts.columns;\n\n    const groups: ColumnGroup[] = [\n        {\n            name: \"Info\",\n            columns: [\n                {\n                    id: \"playerid\",\n                    name: \"Player ID\",\n                    render: PlayerID,\n                    sortKey: (p) => p.id,\n                    hidden: !cols.playerid,\n                },\n                {\n                    id: \"name\",\n                    name: \"Name\",\n                    render: PlayerName,\n                    sortKey: (p) => p.data.name,\n                },\n                {\n                    id: \"team\",\n                    name: \"Team\",\n                    render: PlayerTeam,\n                    sortKey: (p) => p.mainTeam?.teamId ?? \"\",\n                    hidden: !cols.team,\n                },\n                {\n                    id: \"position\",\n                    name: \"Position\",\n                    render: PlayerPosition,\n                    sortKey: (p) => getPositionSortKey(p),\n                    hidden: !cols.position,\n                },\n                {\n                    id: \"item\",\n                    name: \"Items\",\n                    render: PlayerItem,\n                    sortKey: (p) => (p.data.items ? p.data.items.length : 0),\n                    hidden: !cols.items,\n                },\n                star(\n                    \"Combined\",\n                    (s) => s.combined,\n                    opts,\n                    !opts.showAdvancedStats,\n                    \"🌟\",\n                    combinedStarTiers\n                ),\n            ],\n        },\n        {\n            name: \"Stars\",\n            columns: [\n                star(\n                    \"Combined\",\n                    (s) => s.combined,\n                    opts,\n                    opts.showAdvancedStats,\n                    \"🌟\",\n                    combinedStarTiers\n                ),\n                star(\n                    \"Batting\",\n                    (s) => s.batting,\n                    opts,\n                    !cols.batting,\n                    \"Batting\"\n                ),\n                star(\n                    \"Pitching\",\n                    (s) => s.pitching,\n                    opts,\n                    !cols.pitching,\n                    \"Pitching\"\n                ),\n                star(\n                    \"Baserunning\",\n                    (s) => s.baserunning,\n                    opts,\n                    !cols.baserunning,\n                    \"Baserunning\"\n                ),\n                star(\n                    \"Defense\",\n                    (s) => s.defense,\n                    opts,\n                    !cols.defense,\n                    \"Defense\"\n                ),\n            ],\n            hidden: opts.showAdvancedStats,\n        },\n        {\n            name: \"Batting\",\n            hidden: !opts.showAdvancedStats || !cols.batting,\n            columns: [\n                star(\"Batting\", (s) => s.batting, opts),\n                attr(opts, \"Buoyancy\", \"buoy\", \"buoyancy\"),\n                attr(opts, \"Divinity\", \"divin\", \"divinity\"),\n                attr(opts, \"Martyrdom\", \"mrtyr\", \"martyrdom\"),\n                attr(opts, \"Moxie\", \"moxie\", \"moxie\"),\n                attr(opts, \"Musclitude\", \"muscl\", \"musclitude\"),\n                attr(opts, \"Patheticism\", \"path\", \"patheticism\", true),\n                attr(opts, \"Thwackability\", \"thwck\", \"thwackability\"),\n                attr(opts, \"Tragicness\", \"tragc\", \"tragicness\", true),\n            ],\n        },\n        {\n            name: \"Pitching\",\n            hidden: !opts.showAdvancedStats || !cols.pitching,\n            columns: [\n                star(\"Pitching\", (s) => s.pitching, opts),\n                attr(opts, \"Coldness\", \"cold\", \"coldness\"),\n                attr(opts, \"Overpowerment\", \"opw\", \"overpowerment\"),\n                attr(opts, \"Ruthlessness\", \"ruth\", \"ruthlessness\"),\n                attr(opts, \"Shakespearianism\", \"shakes\", \"shakespearianism\"),\n                attr(opts, \"Suppression\", \"supp\", \"suppression\"),\n                attr(opts, \"Unthwackability\", \"untwk\", \"unthwackability\"),\n            ],\n        },\n        {\n            name: \"Baserunning\",\n            hidden: !opts.showAdvancedStats || !cols.baserunning,\n            columns: [\n                star(\"Baserunning\", (s) => s.baserunning, opts),\n                attr(opts, \"Base Thirst\", \"thrst\", \"baseThirst\"),\n                attr(opts, \"Continuation\", \"cont\", \"continuation\"),\n                attr(opts, \"Ground Friction\", \"fric\", \"groundFriction\"),\n                attr(opts, \"Indulgence\", \"indlg\", \"indulgence\"),\n                attr(opts, \"Laserlikeness\", \"laser\", \"laserlikeness\"),\n            ],\n        },\n        {\n            name: \"Defense\",\n            hidden: !opts.showAdvancedStats || !cols.defense,\n            columns: [\n                star(\"Defense\", (s) => s.defense, opts),\n                attr(opts, \"Anticapitalism\", \"ancap\", \"anticapitalism\"),\n                attr(opts, \"Chasiness\", \"chase\", \"chasiness\"),\n                attr(opts, \"Omniscience\", \"omni\", \"omniscience\"),\n                attr(opts, \"Tenaciousness\", \"tenac\", \"tenaciousness\"),\n                attr(opts, \"Watchfulness\", \"watch\", \"watchfulness\"),\n            ],\n        },\n        {\n            name: \"Vibes\",\n            hidden: !opts.showAdvancedStats || !cols.vibestats,\n            columns: [\n                attr(opts, \"Pressurization\", \"press\", \"pressurization\"),\n                attr(opts, \"Cinnamon\", \"cinn\", \"cinnamon\"),\n            ],\n        },\n        {\n            name: \"Misc\",\n            columns: [\n                {\n                    id: \"soul\",\n                    name: \"Soul\",\n                    alt: \"Soul\",\n                    sortKey: (p) => p.data.soul,\n                    render: ({ player }) => (\n                        <td className=\"numeric-stat\">{player.data.soul}</td>\n                    ),\n                    hidden: !opts.columns.misc,\n                },\n                {\n                    id: \"fate\",\n                    name: \"Fate\",\n                    alt: \"Fate\",\n                    sortKey: (p) => p.data.fate ?? -1,\n                    render: ({ player }) => (\n                        <td className=\"numeric-stat\">{player.data.fate}</td>\n                    ),\n                    hidden: !opts.columns.misc,\n                },\n                {\n                    id: \"fingers\",\n                    name: \"Fingers\",\n                    alt: \"Number of fingers\",\n                    sortKey: (p) => p.data.totalFingers,\n                    render: ({ player }) => (\n                        <td className=\"numeric-stat\">\n                            {player.data.totalFingers}\n                        </td>\n                    ),\n                    hidden: !opts.columns.misc,\n                },\n                {\n                    id: \"allergy\",\n                    name: \"Allergy\",\n                    alt: \"Peanut Allergy\",\n                    sortKey: (p) => (p.data.peanutAllergy ? 1 : 0),\n                    render: ({ player }) => (\n                        <td>{player.data.peanutAllergy ? \"🤢\" : \"😋\"}</td>\n                    ),\n                    hidden: !opts.columns.misc,\n                },\n                {\n                    id: \"eDensity\",\n                    name: \"eDensity\",\n                    alt: \"eDensity\",\n                    sortKey: (p) => p.data.eDensity ?? null,\n                    render: ({ player }) => (\n                        <td className=\"numeric-stat\">\n                            {player.data.eDensity\n                                ? player.data.eDensity.toFixed(2)\n                                : \"-\"}\n                        </td>\n                    ),\n                    hidden: !opts.columns.misc,\n                },\n            ],\n        },\n        {\n            name: \"Interviews\",\n            hidden: true, // i'll probably add this in some day\n            columns: [\n                {\n                    id: \"blood\",\n                    name: \"Blood\",\n                    sortKey: (p) => p.data.blood ?? -1,\n                    render: ({ player }) => (\n                        <td className=\"player-blood\">{player.blood()}</td>\n                    ),\n                },\n                {\n                    id: \"coffee\",\n                    name: \"Coffee\",\n                    sortKey: (p) => p.data.coffee ?? -1,\n                    render: ({ player }) => (\n                        <td className=\"player-coffee\">{player.coffee()}</td>\n                    ),\n                },\n                {\n                    id: \"ritual\",\n                    name: \"Ritual\",\n                    sortKey: (p) => p.data.ritual ?? null,\n                    render: ({ player }) => (\n                        <td className=\"player-ritual\">{player.data.ritual}</td>\n                    ),\n                },\n            ],\n        },\n    ];\n\n    return groups\n        .map((g) => ({ ...g, columns: g.columns.filter((c) => !c.hidden) }))\n        .filter((g) => !g.hidden && g.columns.length > 0);\n}\n\nfunction star(\n    name: string,\n    accessor: (s: Stars) => number,\n    options: TableOptionsSlice,\n    hidden = false,\n    display = \"⭐\",\n    tiers = starTiers\n): Column {\n    const sortGetter = (p: Player) =>\n        accessor(p.stars(options.useRealStars, options.applyItemAdjustments));\n\n    return {\n        id: `${name}Stars`,\n        name: display,\n        alt: `${name} Stars`,\n        sortKey: sortGetter,\n        render: starStat(accessor, tiers),\n        hidden,\n    };\n}\n\nfunction attr(\n    opts: TableOptionsSlice,\n    name: string,\n    shortname: string,\n    stat: StatName,\n    inverse = false\n): Column {\n    return {\n        id: shortname,\n        name: shortname,\n        alt: name,\n        sortKey: (p) =>\n            p.stats.get(stat) +\n            (opts.applyItemAdjustments ? p.itemStats.get(stat) : 0),\n        render: advancedStat(stat, attrTiers, inverse),\n    };\n}\nexport interface ColumnGroup {\n    name: string;\n    columns: Column[];\n    hidden?: boolean;\n}\n\nexport interface CellProps {\n    player: Player;\n}\nexport type CellComponent = (props: CellProps) => JSX.Element;\n\nexport interface Column {\n    id: string;\n    name: string;\n    alt?: string;\n    hidden?: boolean;\n    sortKey?: (player: Player) => string | number | null;\n    render?: CellComponent;\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface SavedPlayerState {\n    players: string[];\n}\n\nconst initialState = { players: [] } as SavedPlayerState;\n\nexport const savedPlayersSlice = createSlice({\n    name: \"savedPlayers\",\n    initialState,\n    reducers: {\n        save: (state, action: PayloadAction<string>) => {\n            if (state.players.includes(action.payload)) return;\n            state.players.push(action.payload);\n        },\n        unsave: (state, action: PayloadAction<string>) => {\n            state.players = state.players.filter((id) => id !== action.payload);\n        },\n        clear: (state) => {\n            state.players = [];\n        },\n    },\n});\n\nexport const { save, unsave, clear } = savedPlayersSlice.actions;\n","import React, { useMemo, useState } from \"react\";\nimport Pagination from \"../Pagination\";\nimport { ColumnGroup, getColumns } from \"./columns\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport { save, unsave } from \"../../store/savedPlayersSlice\";\nimport { Player } from \"../../models/Player\";\n\nexport type SortKeyGetter = (p: Player) => string | number;\n\nexport interface SortState {\n    column: string | null;\n    dir?: \"asc\" | \"desc\";\n    key?: SortKeyGetter;\n}\n\ninterface SortStateProps {\n    sort: SortState;\n    setSort: (sort: SortState) => void;\n}\n\nexport interface PlayerTableProps {\n    players: Player[];\n    pageSize?: number;\n}\n\nexport function PlayerTable(props: PlayerTableProps): JSX.Element {\n    const [sort, setSort] = useState<SortState>({ column: null });\n    const [page, setPage] = useState<number>(0);\n    const tableOptions = useAppSelector((state) => state.tableOptions);\n\n    const columns = useMemo(() => getColumns(tableOptions), [tableOptions]);\n    const sortedPlayers = useMemo(\n        () => sortPlayers(props.players, columns, sort),\n        [columns, props.players, tableOptions, sort]\n    );\n\n    const pageCount = props.pageSize\n        ? Math.ceil(props.players.length / props.pageSize)\n        : 0;\n\n    const pagedPlayers = useMemo(() => {\n        if (!props.pageSize) return sortedPlayers;\n\n        const pageCount = Math.ceil(props.players.length / props.pageSize);\n        const actualPage = Math.min(page, pageCount - 1);\n        return sortedPlayers.slice(\n            actualPage * props.pageSize,\n            (actualPage + 1) * props.pageSize\n        );\n    }, [sortedPlayers, page, props.pageSize]);\n\n    return (\n        <div>\n            <table className=\"table table-sm table-hover player-table\">\n                <TableColgroups columns={columns} />\n                <TableHeader columns={columns} sort={sort} setSort={setSort} />\n                <TableBody players={pagedPlayers} columns={columns} />\n            </table>\n            <Pagination\n                pageCount={pageCount}\n                pageIndex={page}\n                gotoPage={setPage}\n            />\n        </div>\n    );\n}\n\nfunction TableColgroups(props: { columns: ColumnGroup[] }) {\n    return (\n        <>\n            {props.columns.map((cg, i) => (\n                <colgroup\n                    key={cg.name}\n                    // Make the first group a bit longer to handle the checkbox\n                    span={cg.columns.length + (i === 0 ? 1 : 0)}\n                />\n            ))}\n        </>\n    );\n}\n\ninterface TableBodyProps {\n    players: Player[];\n    columns: ColumnGroup[];\n}\n\nfunction TableBody(props: TableBodyProps) {\n    return (\n        <tbody>\n            {props.players.map((p) => (\n                <TableRow key={p.id} player={p} columns={props.columns} />\n            ))}\n        </tbody>\n    );\n}\n\ninterface TableRowProps {\n    player: Player;\n    columns: ColumnGroup[];\n}\n\nfunction TableRow(props: TableRowProps) {\n    // These can be used to know whether to display the items or not.\n    // const toShow = useAppSelector((state) => state.playerItems.toShow);\n    // const showItems = toShow.includes(props.player.id);\n\n    return (\n        <tr>\n            <SaveCheckbox id={props.player.id} />\n            {props.columns.flatMap((cg) => {\n                return cg.columns.map((c) => {\n                    const Cell = c.render;\n                    if (!Cell) return <td key={c.id} />;\n                    return <Cell key={c.id} player={props.player} />;\n                });\n            })}\n        </tr>\n    );\n}\n\ninterface TableHeaderProps extends SortStateProps {\n    columns: ColumnGroup[];\n}\n\nfunction TableHeader(props: TableHeaderProps) {\n    const flatColumns = props.columns.flatMap((cg) => cg.columns);\n    return (\n        <thead>\n            <tr>\n                <th />\n                {props.columns.map((cg, i) => (\n                    <th key={i} colSpan={cg.columns.length}>\n                        {cg.name}\n                    </th>\n                ))}\n            </tr>\n            <tr>\n                <th />\n                {flatColumns.map((c) => (\n                    <TableColumnHeader\n                        key={c.id}\n                        id={c.id}\n                        title={c.alt}\n                        name={c.name}\n                        sort={props.sort}\n                        setSort={props.setSort}\n                    />\n                ))}\n            </tr>\n        </thead>\n    );\n}\n\ninterface TableColumnHeaderProps extends SortStateProps {\n    id: string;\n    title?: string;\n    name: string;\n}\n\nfunction TableColumnHeader(props: TableColumnHeaderProps) {\n    const symbol = getSortSymbol(props.id, props.sort);\n\n    return (\n        <th\n            title={props.title}\n            onClick={(e) => {\n                e.preventDefault();\n                props.setSort(getSortState(props.id, props.sort));\n            }}\n        >\n            {props.name}\n            {symbol}\n        </th>\n    );\n}\n\nfunction SaveCheckbox(props: { id: string }) {\n    const dispatch = useAppDispatch();\n    const players = useAppSelector((state) => state.savedPlayers.players);\n    const checked = players.includes(props.id);\n\n    return (\n        <td className=\"selectbox\">\n            <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                checked={checked}\n                onChange={(e) => {\n                    if (e.target.checked) {\n                        dispatch(save(props.id));\n                    } else {\n                        dispatch(unsave(props.id));\n                    }\n                }}\n            />\n        </td>\n    );\n}\n\nfunction getSortSymbol(thisId: string, state: SortState) {\n    if (thisId !== state.column) return null;\n    if (state.dir === \"asc\") return \"☝\";\n    if (state.dir === \"desc\") return \"👇\";\n    return null;\n}\n\nfunction getSortState(thisId: string, state: SortState): SortState {\n    // Click on different column, set ascending\n    if (state.column !== thisId) return { column: thisId, dir: \"asc\" };\n\n    // Toggle ascending to descending\n    if (state.dir === \"asc\") return { column: thisId, dir: \"desc\" };\n\n    // Toggle descending to null\n    return { column: null, dir: undefined };\n}\n\nfunction sortPlayers(\n    players: Player[],\n    columns: ColumnGroup[],\n    sort: SortState\n): Player[] {\n    if (!sort.column) return players;\n\n    const sortColumn = columns\n        .flatMap((cg) => cg.columns)\n        .filter((c) => c.id === sort.column)[0];\n\n    const sortKey = sortColumn?.sortKey;\n    if (!sortKey) return players;\n\n    return [...players].sort((a, b) => {\n        const keyA = sortKey(a) ?? 0;\n        const keyB = sortKey(b) ?? 0;\n        const comp = keyA > keyB ? 1 : keyA < keyB ? -1 : 0;\n        return sort.dir === \"asc\" ? comp : -comp;\n    });\n}\n","export class Stars {\n    constructor(\n        public batting: number = 0,\n        public pitching: number = 0,\n        public baserunning: number = 0,\n        public defense: number = 0\n    ) {}\n\n    get combined(): number {\n        return this.batting + this.pitching + this.baserunning + this.defense;\n    }\n\n    add(other: Stars): Stars {\n        return new Stars(\n            this.batting + other.batting,\n            this.pitching + other.pitching,\n            this.baserunning + other.baserunning,\n            this.defense + other.defense\n        );\n    }\n}\n","import { BlaseballPlayer } from \"../api/types\";\nimport { Stars } from \"./Stars\";\n\nexport type StatName =\n    | \"tragicness\"\n    | \"buoyancy\"\n    | \"thwackability\"\n    | \"moxie\"\n    | \"divinity\"\n    | \"musclitude\"\n    | \"patheticism\"\n    | \"martyrdom\"\n    | \"cinnamon\"\n    | \"baseThirst\"\n    | \"laserlikeness\"\n    | \"continuation\"\n    | \"indulgence\"\n    | \"groundFriction\"\n    | \"shakespearianism\"\n    | \"suppression\"\n    | \"unthwackability\"\n    | \"coldness\"\n    | \"overpowerment\"\n    | \"ruthlessness\"\n    | \"pressurization\"\n    | \"omniscience\"\n    | \"tenaciousness\"\n    | \"watchfulness\"\n    | \"anticapitalism\"\n    | \"chasiness\";\n\nexport class AdvancedStats {\n    constructor(private data: Record<StatName, number>) {}\n\n    static new(): AdvancedStats {\n        const record: Partial<Record<StatName, number>> = {};\n        for (const id of statIndices) record[id] = 0;\n        return new AdvancedStats(record as Record<StatName, number>);\n    }\n\n    static fromPlayer(player: BlaseballPlayer): AdvancedStats {\n        const stats = {\n            ...player,\n            pressurization: player.pressurization ?? 0,\n            cinnamon: player.cinnamon ?? 0,\n        };\n        return new AdvancedStats(stats);\n    }\n\n    get(id: StatName): number {\n        return this.data[id];\n    }\n\n    add(other: AdvancedStats): AdvancedStats {\n        const result = new AdvancedStats({ ...this.data });\n        for (const id of statIndices) result.data[id] += other.data[id];\n        return result;\n    }\n\n    stars(): Stars {\n        const batting = this.battingStars();\n        const pitching = this.pitchingStars();\n        const baserunning = this.baserunningStars();\n        const defense = this.defenseStars();\n        return new Stars(batting, pitching, baserunning, defense);\n    }\n\n    battingStars(): number {\n        return (\n            5 *\n            Math.pow(1 - this.data.tragicness, 0.01) *\n            Math.pow(this.data.buoyancy, 0) *\n            Math.pow(this.data.thwackability, 0.35) *\n            Math.pow(this.data.moxie, 0.075) *\n            Math.pow(this.data.divinity, 0.35) *\n            Math.pow(this.data.musclitude, 0.075) *\n            Math.pow(1 - this.data.patheticism, 0.05) *\n            Math.pow(this.data.martyrdom, 0.02)\n        );\n    }\n\n    pitchingStars(): number {\n        return (\n            5 *\n            Math.pow(this.data.shakespearianism, 0.1) *\n            Math.pow(this.data.suppression, 0) *\n            Math.pow(this.data.unthwackability, 0.5) *\n            Math.pow(this.data.coldness, 0.025) *\n            Math.pow(this.data.overpowerment, 0.15) *\n            Math.pow(this.data.ruthlessness, 0.4)\n        );\n    }\n\n    baserunningStars(): number {\n        return (\n            5 *\n            Math.pow(this.data.laserlikeness, 0.5) *\n            Math.pow(this.data.continuation, 0.1) *\n            Math.pow(this.data.baseThirst, 0.1) *\n            Math.pow(this.data.indulgence, 0.1) *\n            Math.pow(this.data.groundFriction, 0.1)\n        );\n    }\n\n    defenseStars(): number {\n        return (\n            5 *\n            Math.pow(this.data.omniscience, 0.2) *\n            Math.pow(this.data.tenaciousness, 0.2) *\n            Math.pow(this.data.watchfulness, 0.1) *\n            Math.pow(this.data.anticapitalism, 0.1) *\n            Math.pow(this.data.chasiness, 0.1)\n        );\n    }\n}\n\nexport const statIndices: StatName[] = [\n    \"tragicness\",\n    \"buoyancy\",\n    \"thwackability\",\n    \"moxie\",\n    \"divinity\",\n    \"musclitude\",\n    \"patheticism\",\n    \"martyrdom\",\n    \"cinnamon\",\n    \"baseThirst\",\n    \"laserlikeness\",\n    \"continuation\",\n    \"indulgence\",\n    \"groundFriction\",\n    \"shakespearianism\",\n    \"suppression\",\n    \"unthwackability\",\n    \"coldness\",\n    \"overpowerment\",\n    \"ruthlessness\",\n    \"pressurization\",\n    \"omniscience\",\n    \"tenaciousness\",\n    \"watchfulness\",\n    \"anticapitalism\",\n    \"chasiness\",\n];\n","import { ItemPart, PlayerItem } from \"../api/types\";\nimport { AdvancedStats, statIndices, StatName } from \"./AdvancedStats\";\nimport { Stars } from \"./Stars\";\n\nexport class Item {\n    stars: Stars;\n    stats: AdvancedStats;\n\n    constructor(public data: PlayerItem) {\n        this.stars = this.isBroken()\n            ? new Stars()\n            : new Stars(\n                  this.data.hittingRating * 5,\n                  this.data.pitchingRating * 5,\n                  this.data.baserunningRating * 5,\n                  this.data.defenseRating * 5\n              );\n        this.stats = this.getStats();\n    }\n\n    isBroken(): boolean {\n        return this.data.health === 0 && this.data.durability !== -1;\n    }\n\n    private getStats(): AdvancedStats {\n        if (this.data.health === 0 && this.data.durability !== -1)\n            return AdvancedStats.new();\n\n        // mutable...\n        const stats: Partial<Record<StatName, number>> = {};\n        for (const id of statIndices) stats[id] = 0;\n\n        function applyPart(part: ItemPart) {\n            for (const adj of part.adjustments) {\n                if (adj.type === 1) {\n                    const stat = statIndices[adj.stat];\n                    stats[stat] = (stats[stat] ?? 0) + adj.value;\n                }\n            }\n        }\n\n        if (this.data.root) applyPart(this.data.root);\n        if (this.data.prePrefix) applyPart(this.data.prePrefix);\n        if (this.data.postPrefix) applyPart(this.data.postPrefix);\n        if (this.data.suffix) applyPart(this.data.suffix);\n        if (this.data.prefixes) {\n            for (const prefix of this.data.prefixes) applyPart(prefix);\n        }\n\n        return new AdvancedStats(stats as Record<StatName, number>);\n    }\n}\n","import { BlaseballPlayer, BlaseballTeam, ChroniclerEntity } from \"../api/types\";\nimport { getTeamType, libraryTeamIds } from \"../teams\";\nimport { AdvancedStats } from \"./AdvancedStats\";\nimport { Item } from \"./Item\";\nimport { Stars } from \"./Stars\";\n\nexport type TeamPosition = \"lineup\" | \"rotation\" | \"shadows\";\n\nexport interface RosterEntry {\n    player: string;\n    teamId: string;\n    position: TeamPosition;\n    index: number;\n}\n\nexport type PlayerStatus =\n    | \"active\"\n    | \"deprecated\"\n    | \"deceased\"\n    | \"retired\"\n    | \"library\"\n    | \"exhibition\";\n\nexport class Player {\n    public readonly id: string;\n    public readonly data: BlaseballPlayer;\n    public readonly mods: string[];\n\n    public readonly mainTeam: RosterEntry | null;\n    public readonly mainTeamData: BlaseballTeam | null;\n    public readonly teams: RosterEntry[];\n\n    public readonly stats: AdvancedStats;\n    public readonly itemStats: AdvancedStats;\n    public readonly adjustedStats: AdvancedStats;\n    public readonly itemStars: Stars;\n\n    public readonly items: Item[];\n    public readonly names: string[];\n\n    constructor(\n        player: ChroniclerEntity<BlaseballPlayer>,\n        teams: Record<string, BlaseballTeam>,\n        roster: Record<string, RosterEntry[]>\n    ) {\n        this.id = player.entityId;\n        this.data = player.data;\n        this.teams = roster[player.entityId] ?? [];\n\n        this.mainTeam = getMainTeam(this.teams);\n        this.mainTeamData = this.mainTeam ? teams[this.mainTeam.teamId] : null;\n\n        this.mods = extractPlayerMods(this.data);\n\n        this.stats = AdvancedStats.fromPlayer(this.data);\n\n        this.items = (this.data.items ?? []).map((i) => new Item(i));\n        this.itemStats = this.items\n            .map((i) => i.stats)\n            .reduce((a, b) => a.add(b), AdvancedStats.new());\n        this.itemStars = this.items\n            .map((i) => i.stars)\n            .reduce((a, b) => a.add(b), new Stars());\n        this.adjustedStats = this.stats.add(this.itemStats);\n\n        this.names = [this.data.name];\n        if (this.data.state?.unscatteredName)\n            this.names.push(this.data.state.unscatteredName);\n    }\n\n    name(showUnscatteredName: boolean): string {\n        if (showUnscatteredName) {\n            return this.data.state?.unscatteredName ?? this.data.name;\n        }\n        return this.data.name;\n    }\n\n    hasMod(...mods: string[]): boolean {\n        // TODO: O(n^2)\n        for (const mod of mods) {\n            if (this.mods.includes(mod)) return true;\n        }\n        return false;\n    }\n\n    stars(realStars = true, applyItems = false): Stars {\n        if (this.data.hittingRating === undefined) realStars = true;\n        if (realStars) {\n            const stats = applyItems ? this.adjustedStats : this.stats;\n            return stats.stars();\n        }\n        return this.providedStars(applyItems);\n    }\n\n    providedStars(applyItems = false): Stars {\n        if (this.data.hittingRating === undefined) {\n            // Phantom Sixpack doesn't have this at all, force real formula\n            return this.stars(true, applyItems);\n        }\n\n        const baseStars = new Stars(\n            this.data.hittingRating * 5,\n            this.data.pitchingRating * 5,\n            this.data.baserunningRating * 5,\n            this.data.defenseRating * 5\n        );\n\n        return applyItems ? baseStars.add(this.itemStars) : baseStars;\n    }\n\n    status(): PlayerStatus {\n        if (this.id === \"bc4187fa-459a-4c06-bbf2-4e0e013d27ce\")\n            return \"deprecated\"; // (hi sixpack)\n\n        if (this.data.deceased) return \"deceased\";\n\n        // We're making a lot of plot assumptions here :)\n        if (\n            this.hasMod(\"RETIRED\", \"STATIC\", \"DUST\") ||\n            (this.hasMod(\"LEGENDARY\") && !this.hasMod(\"REPLICA\"))\n        )\n            return \"retired\";\n\n        const team = this.mainTeam?.teamId ?? \"\";\n        if (exhibitionTeams.includes(team)) return \"exhibition\";\n        if (libraryTeamIds.includes(team)) return \"library\";\n\n        // Percolated players count as Coffee Cup\n        if (this.hasMod(\"COFFEE_EXIT\")) return \"exhibition\";\n\n        return \"active\";\n    }\n\n    blood(): string {\n        return bloodTypes[this.data.blood] ?? \"Blood?\";\n    }\n\n    coffee(): string {\n        return coffeeStyles[this.data.coffee] ?? \"Coffee?\";\n    }\n}\n\nfunction getMainTeam(teams: RosterEntry[]): RosterEntry | null {\n    const leagueTeam = teams.find((t) => getTeamType(t.teamId) === \"league\");\n    const specialTeam = teams.find((t) => getTeamType(t.teamId) === \"special\");\n    const libraryTeam = teams.find((t) => getTeamType(t.teamId) === \"library\");\n    return leagueTeam ?? specialTeam ?? libraryTeam ?? null;\n}\n\nconst bloodTypes = [\n    \"A\",\n    \"AAA\",\n    \"AA\",\n    \"Acidic\",\n    \"Basic\",\n    \"O\",\n    \"O No\",\n    \"H₂O\",\n    \"Electric\",\n    \"Love\",\n    \"Fire\",\n    \"Psychic\",\n    \"Grass\",\n];\n\nconst coffeeStyles = [\n    \"Black\",\n    \"Light & Sweet\",\n    \"Macchiato\",\n    \"Cream & Sugar\",\n    \"Cold Brew\",\n    \"Flat White\",\n    \"Americano\",\n    \"Coffee?\",\n    \"Heavy Foam\",\n    \"Latte\",\n    \"Decaf\",\n    \"Milk Substitute\",\n    \"Plenty of Sugar\",\n    \"Anything\",\n];\n\nconst exhibitionTeams = [\n    \"d2634113-b650-47b9-ad95-673f8e28e687\", // Data Witches\n    \"3b0a289b-aebd-493c-bc11-96793e7216d5\", // Artists\n    \"7fcb63bc-11f2-40b9-b465-f1d458692a63\", // Real Game Band\n];\n\nexport function extractPlayerMods(player: BlaseballPlayer): string[] {\n    const permAttr = player.permAttr ?? [];\n    const seasAttr = player.seasAttr ?? [];\n    const weekAttr = player.weekAttr ?? [];\n    const gameAttr = player.gameAttr ?? [];\n    const itemAttr = player.itemAttr ?? [];\n    return [...permAttr, ...itemAttr, ...seasAttr, ...weekAttr, ...gameAttr];\n}\n\nexport function getAllModIds(\n    players: ChroniclerEntity<BlaseballPlayer>[]\n): string[] {\n    const map: Record<string, boolean> = {};\n    for (const p of players) {\n        for (const mod of extractPlayerMods(p.data)) {\n            map[mod] = true;\n        }\n    }\n    return Object.keys(map);\n}\n","import { getAllModIds, Player, RosterEntry } from \"../models/Player\";\nimport { generatePlayerTeamMap } from \"../utils\";\nimport {\n    BlaseballPlayer,\n    BlaseballTeam,\n    ChroniclerEntities,\n    ChroniclerEntity,\n    PlayerMod,\n} from \"./types\";\nimport attributes from './attributes.json';\nimport queryString from \"query-string\";\n\nconst chronicler_base_url: string = process.env.REACT_APP_CHRONICLER_BASE_URL || \"https://api.sibr.dev/chronicler\";\n\nexport interface LeagueData {\n    players: Record<string, Player>;\n    teams: Record<string, BlaseballTeam>;\n    roster: Record<string, RosterEntry[]>;\n    mods: Record<string, PlayerMod>;\n}\n\nexport async function fetchLeagueData(at: string | null): Promise<LeagueData> {\n    const [[players, mods], teams] = await Promise.all([\n        fetchPlayersAndMods(at),\n        fetchTeams(at),\n    ]);\n\n    const teamMap = Object.fromEntries(\n        teams.map((t) => [t.entityId, t.data])\n    );\n    const rosterMap = generatePlayerTeamMap(teams);\n    const modMap = Object.fromEntries(mods.map((m) => [m.id, m]));\n    const playerObjects = Object.fromEntries(\n        players.map((p) => [\n            p.entityId,\n            new Player(p, teamMap, rosterMap),\n        ])\n    );\n\n    return {\n        players: playerObjects,\n        teams: teamMap,\n        roster: rosterMap,\n        mods: modMap,\n    };\n}\n\nasync function fetchPlayersAndMods(\n    at: string | null\n): Promise<[ChroniclerEntity<BlaseballPlayer>[], PlayerMod[]]> {\n    const players = await fetchEntities<BlaseballPlayer>(\"player\", at);\n    const modIds = getAllModIds(players);\n    const mods: PlayerMod[] = attributes.filter(a => modIds.indexOf(a.id) !== -1);\n    return [players, mods];\n}\n\nasync function fetchTeams(\n    at: string | null\n): Promise<ChroniclerEntity<BlaseballTeam>[]> {\n    return await fetchEntities<BlaseballTeam>(\"team\", at);\n}\n\nasync function fetchEntities<T>(\n    type: string, at: string | null\n) : Promise<ChroniclerEntity<T>[]> {\n    const pages: ChroniclerEntities<T>[] = [];\n    const offset: number = parseInt(document!.cookie!.split('; ').find(row => row.startsWith('offset_sec'))!.split('=')[1])!;\n    at = new Date((new Date().getTime() - offset * 1000)).toISOString();\n    do {\n        pages.push(await fetchJson<ChroniclerEntities<T>>(\n            queryString.stringifyUrl({\n                url: chronicler_base_url + \"/v2/entities\",\n                query: {\n                    type: type,\n                    at: at ?? undefined,\n                    page: pages[pages.length - 1]?.nextPage ?? undefined\n                },\n            })\n        ));\n    } while (pages[pages.length - 1]?.nextPage);\n    return pages.flatMap((page) => page.items);\n}\n\nasync function fetchJson<T>(url: string): Promise<T> {\n    const resp = await fetch(url, {\n        mode: \"cors\",\n    });\n    return (await resp.json()) as T;\n}\n","import useSWR from \"swr\";\nimport { BlaseballTeam, PlayerMod } from \"./types\";\nimport { Player, RosterEntry } from \"../models/Player\";\nimport { fetchLeagueData } from \"./api\";\n\nexport interface LeagueData {\n    players: Record<string, Player>;\n    teams: Record<string, BlaseballTeam>;\n    roster: Record<string, RosterEntry[]>;\n    mods: Record<string, PlayerMod>;\n}\n\nexport function useLeagueData(): LeagueData | null {\n    const at = null; // todo: fetch this from store somehow?\n    const { data } = useSWR(\n        `leaguedata/${at}`,\n        async () => await fetchLeagueData(at),\n        swrSettings\n    );\n    return data ?? null;\n}\n\nconst swrSettings = {\n    revalidateOnFocus: false,\n    focusThrottleInterval: 60 * 60 * 1000,\n    revalidateOnReconnect: false,\n    refreshWhenOffline: false,\n    refreshWhenHidden: false,\n    refreshInterval: 0,\n};\n","import React, { useMemo } from \"react\";\nimport { useDebounce } from \"use-debounce/lib\";\nimport { PlayerTable } from \"../components/table/PlayerTable\";\nimport { PlayerFilterSlice } from \"../store/playerFilterSlice\";\nimport { useAppSelector } from \"../hooks\";\nimport { useLeagueData } from \"../api/fetchhooks\";\nimport { Player, RosterEntry } from \"../models/Player\";\n\nfunction AllPlayerPage(): JSX.Element {\n    const data = useLeagueData();\n    const filters = useAppSelector((state) => state.playerFilter);\n    const [filtersDebounced] = useDebounce(filters, 200);\n\n    const filteredPlayers = useMemo(() => {\n        if (!data) return null;\n        const filtered = applyPlayerFilter(\n            Object.values(data.players),\n            filters\n        );\n        return filtered;\n    }, [data, filtersDebounced]);\n\n    if (!filteredPlayers) return <div>Loading...</div>;\n\n    return <PlayerTable players={filteredPlayers} pageSize={25} />;\n}\n\nfunction applyPlayerFilter(\n    players: Player[],\n    options: PlayerFilterSlice\n): Player[] {\n    return players.filter((p) => {\n        if (!matchTeam(p.teams, options.teams)) return false;\n        if (!matchName(p.names, options.search)) return false;\n        if (!matchMods(p.mods, options.mods)) return false;\n        if (!matchPositions(p.mainTeam?.position, options.positions))\n            return false;\n        if (!matchStatus(p.status(), options.statuses)) return false;\n\n        return true;\n    });\n}\n\nfunction matchTeam(teams: RosterEntry[], filterTeams: string[]): boolean {\n    if (!filterTeams.length) return true;\n    for (const team of teams) {\n        if (filterTeams.indexOf(team.teamId) !== -1) return true;\n    }\n    return false;\n}\n\nfunction matchName(names: string[], search: string): boolean {\n    if (!search) return true;\n    for (const name of names) {\n        if (name.toLocaleLowerCase().includes(search.toLocaleLowerCase()))\n            return true;\n    }\n    return false;\n}\n\nfunction matchMods(mods: string[], filterMods: string[]): boolean {\n    if (!filterMods.length) return true;\n    for (const filterMod of filterMods) {\n        if (mods.indexOf(filterMod) > -1) return true;\n    }\n    return false;\n}\n\nfunction matchPositions(\n    position: string | undefined,\n    filterPositions: string[]\n) {\n    if (!filterPositions.length) return true;\n    if (!position) return false;\n    return filterPositions.indexOf(position) > -1;\n}\n\nfunction matchStatus(status: string | undefined, filterStatus: string[]) {\n    if (!filterStatus.length) return true;\n    if (!status) return false;\n    return filterStatus.indexOf(status) > -1;\n}\n\nexport default AllPlayerPage;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport type ListColumn =\n    | \"playerid\"\n    | \"team\"\n    | \"position\"\n    | \"items\"\n    | \"batting\"\n    | \"pitching\"\n    | \"baserunning\"\n    | \"defense\"\n    | \"vibestats\"\n    | \"misc\";\n\nexport interface TableOptionsSlice {\n    columns: Record<ListColumn, boolean>;\n    useRealStars: boolean;\n    showAdvancedStats: boolean;\n    applyItemAdjustments: boolean;\n    showUnscatteredNames: boolean;\n}\n\nconst initialState = {\n    columns: {\n        playerid: false,\n        team: true,\n        position: true,\n        items: false,\n        batting: true,\n        pitching: true,\n        baserunning: true,\n        defense: true,\n        vibestats: false,\n        misc: true,\n    },\n    applyItemAdjustments: true,\n    useRealStars: true,\n    showAdvancedStats: true,\n    showUnscatteredNames: true\n} as TableOptionsSlice;\n\nexport const tableOptionsSlice = createSlice({\n    name: \"options\",\n    initialState,\n    reducers: {\n        setColumn: (\n            state,\n            action: PayloadAction<{ column: ListColumn; value: boolean }>\n        ) => {\n            state.columns[action.payload.column] = action.payload.value;\n        },\n        setUseRealStars: (state, action: PayloadAction<boolean>) => {\n            state.useRealStars = action.payload;\n        },\n        setShowAdvancedStats: (state, action: PayloadAction<boolean>) => {\n            state.showAdvancedStats = action.payload;\n        },\n        setApplyItemAdjustments: (state, action: PayloadAction<boolean>) => {\n            state.applyItemAdjustments = action.payload;\n        },\n        setShowUnscatteredNames: (state, action: PayloadAction<boolean>) => {\n            state.showUnscatteredNames = action.payload;\n        },\n    },\n});\n\nexport const {\n    setColumn,\n    setUseRealStars,\n    setShowAdvancedStats,\n    setApplyItemAdjustments,\n    setShowUnscatteredNames,\n} = tableOptionsSlice.actions;\n","import { ReactNode } from \"react\";\n\nfunction CheckboxOption(props: {\n    id: string;\n    value: boolean;\n    setValue: (value: boolean) => void;\n    children?: ReactNode;\n}): JSX.Element {\n    return (\n        <div className=\"form-check\">\n            <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                checked={props.value}\n                id={props.id}\n                onChange={(e) => props.setValue(e.target.checked)}\n            />\n            <label className=\"form-check-label\" htmlFor={props.id}>\n                {props.children}\n            </label>\n        </div>\n    );\n}\n\nexport default CheckboxOption;\n","import React from \"react\";\nimport {\n    setApplyItemAdjustments,\n    setShowAdvancedStats,\n    setShowUnscatteredNames,\n    setUseRealStars,\n} from \"../../store/tableOptionsSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport CheckboxOption from \"../CheckboxOption\";\n\nfunction ListOptionsSelect(): JSX.Element {\n    const dispatch = useAppDispatch();\n    const opts = useAppSelector((state) => state.tableOptions);\n\n    return (\n        <div className=\"mb-4\">\n            <CheckboxOption\n                id=\"advanced-stats\"\n                value={opts.showAdvancedStats}\n                setValue={(val) => dispatch(setShowAdvancedStats(val))}\n            >\n                Show advanced stats\n            </CheckboxOption>\n\n            <CheckboxOption\n                id=\"real-stars\"\n                value={opts.useRealStars}\n                setValue={(val) => dispatch(setUseRealStars(val))}\n            >\n                Use real star formula\n            </CheckboxOption>\n\n            <CheckboxOption\n                id=\"apply-item-adj\"\n                value={opts.applyItemAdjustments}\n                setValue={(val) => dispatch(setApplyItemAdjustments(val))}\n            >\n                Apply item adjustments\n            </CheckboxOption>\n\n\n            <CheckboxOption\n                id=\"unscatter-names\"\n                value={opts.showUnscatteredNames}\n                setValue={(val) => dispatch(setShowUnscatteredNames(val))}\n            >\n                Unscatter player names\n            </CheckboxOption>\n        </div>\n    );\n}\n\nexport default ListOptionsSelect;\n","import { NavLink } from \"react-router-dom\";\n\nfunction Nav(): JSX.Element {\n    return (\n        <ul className=\"nav nav-pills flex-column\">\n            <li className=\"nav-item\">\n                <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to=\"/\"\n                    exact\n                >\n                    All players\n                </NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to=\"/team\"\n                >\n                    Single team\n                </NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to=\"/saved\"\n                >\n                    Saved players\n                </NavLink>\n            </li>\n        </ul>\n    );\n}\n\nexport default Nav;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface PlayerFilterSlice {\n    search: string;\n    teams: string[];\n    mods: string[];\n    positions: string[];\n    statuses: string[];\n}\n\nconst initialState = {\n    search: \"\",\n    teams: [],\n    mods: [],\n    positions: [],\n    statuses: [],\n} as PlayerFilterSlice;\n\nexport const playerFilterSlice = createSlice({\n    name: \"playerFilter\",\n    initialState,\n    reducers: {\n        setSearch: (state, action: PayloadAction<string>) => {\n            state.search = action.payload;\n        },\n        setTeams: (state, action: PayloadAction<string[]>) => {\n            state.teams = action.payload;\n        },\n        setMods: (state, action: PayloadAction<string[]>) => {\n            state.mods = action.payload;\n        },\n        setPositions: (state, action: PayloadAction<string[]>) => {\n            state.positions = action.payload;\n        },\n        setStatuses: (state, action: PayloadAction<string[]>) => {\n            state.statuses = action.payload;\n        },\n    },\n});\n\nexport const {\n    setSearch,\n    setTeams,\n    setMods,\n    setPositions,\n    setStatuses,\n} = playerFilterSlice.actions;\n","import Select from \"react-select\";\nimport { useLeagueData } from \"../../api/fetchhooks\";\n\nfunction ModifierSelect(props: {\n    id: string;\n    mods: string[];\n    setMods: (mods: string[]) => void;\n}): JSX.Element {\n    const data = useLeagueData();\n\n    const options = Object.values(data?.mods ?? []).map((mod) => ({\n        value: mod.id,\n        title: mod.title,\n        description: mod.description,\n    }));\n    options.sort((a, b) => a.title.localeCompare(b.title));\n\n    const selectedOptions = options.filter((o) => props.mods.includes(o.value));\n\n    return (\n        <Select\n            id={props.id}\n            isMulti\n            options={options}\n            value={selectedOptions}\n            getOptionValue={(mod) => mod.title}\n            formatOptionLabel={(option, { context }) => {\n                return (\n                    <span>\n                        {option.title}{\" \"}\n                        {context === \"menu\" && (\n                            <div className=\"small text-muted\">\n                                {option.description}\n                            </div>\n                        )}\n                    </span>\n                );\n            }}\n            onChange={(newItems) => {\n                const mods = newItems.map((item) => item.value);\n                props.setMods(mods);\n            }}\n        />\n    );\n}\n\nexport default ModifierSelect;\n","import Select from \"react-select\";\nimport { useLeagueData } from \"../../api/fetchhooks\";\nimport { BlaseballTeam } from \"../../api/types\";\nimport {\n    coffeeTeamIds,\n    ilbTeamIds,\n    sortTeams,\n    specialTeamIds,\n    libraryTeamIds,\n    getTeamType,\n    getTeamName,\n} from \"../../teams\";\nimport { parseEmoji } from \"../../utils\";\n\nexport function TeamSelect(props: {\n    id?: string;\n    teams: string[];\n    setTeams: (teams: string[]) => void;\n    multi: boolean;\n}): JSX.Element | null {\n    const data = useLeagueData();\n    if (!data) return null;\n\n    const normalTeams = sortTeams(ilbTeamIds.map((id) => data.teams[id]).filter(a => a !== undefined));\n    const coffeeTeams = sortTeams(coffeeTeamIds.map((id) => data.teams[id]).filter(a => a !== undefined));\n    const specialTeams = specialTeamIds.map((id) => data.teams[id]).filter(a => a !== undefined);\n    const libraryTeams = sortTeams(\n        libraryTeamIds.map((id) => data.teams[id]).filter((t) => !!t)\n    ).filter(a => a !== undefined);\n    const unknownTeams = sortTeams(\n        Object.keys(data.teams)\n            .filter((t) => getTeamType(t) === null)\n            .map((id) => data.teams[id])\n    );\n\n    const options = [\n        { label: \"ILB\", options: normalTeams },\n        { label: \"Library\", options: libraryTeams },\n        { label: \"Coffee Cup\", options: coffeeTeams },\n        { label: \"Special\", options: specialTeams },\n    ];\n\n    if (unknownTeams.length) {\n        options.push({ label: \"uhhhhh\", options: unknownTeams });\n    }\n\n    const formatOptionLabel = (\n        option: BlaseballTeam,\n        meta: { context: string }\n    ) => {\n        const teamName = getTeamName(option);\n        return (\n            <span>\n                <span className=\"emoji\">{parseEmoji(option.emoji)}</span>\n                {meta.context === \"menu\" ? teamName.nickname : teamName.nickname}\n            </span>\n        );\n    };\n\n    return (\n        <Select\n            isMulti={props.multi}\n            id={props.id}\n            options={options}\n            value={props.teams.map((id) => data.teams[id])}\n            getOptionValue={(team) => getTeamName(team).fullName}\n            formatOptionLabel={formatOptionLabel}\n            onChange={(value) => {\n                // depends whether multi flag is set\n                if (Array.isArray(value)) {\n                    const teams = value.map((item) => item.id);\n                    props.setTeams(teams);\n                } else {\n                    props.setTeams(value ? [(value as BlaseballTeam).id] : []);\n                }\n            }}\n        />\n    );\n}\n","import React from \"react\";\nimport {\n    setMods,\n    setPositions,\n    setSearch,\n    setStatuses,\n    setTeams,\n} from \"../../store/playerFilterSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport ModifierSelect from \"./ModifierSelect\";\nimport { TeamSelect } from \"./TeamSelect\";\nimport Select from \"react-select\";\n\nfunction PlayerFilterSelect(): JSX.Element {\n    return (\n        <div className=\"sidebar-section\">\n            <Search />\n            <ModifierFilter />\n            <PositionFilter />\n            <TeamFilter />\n            <StatusFilter />\n        </div>\n    );\n}\n\nfunction Search() {\n    const dispatch = useAppDispatch();\n    const search = useAppSelector((state) => state.playerFilter.search);\n\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor=\"player-name-search\" className=\"form-label\">\n                Search\n            </label>\n            <input\n                id=\"player-name-search\"\n                type=\"text\"\n                className=\"form-control\"\n                value={search}\n                onChange={(e) => dispatch(setSearch(e.target.value))}\n                placeholder=\"Search by name...\"\n            />\n        </div>\n    );\n}\n\nfunction TeamFilter() {\n    const dispatch = useAppDispatch();\n    const selected = useAppSelector((state) => state.playerFilter.teams);\n\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor=\"player-team\" className=\"form-label\">\n                Team\n            </label>\n            <TeamSelect\n                id=\"player-team\"\n                multi={true}\n                teams={selected}\n                setTeams={(teams) => dispatch(setTeams(teams))}\n            />\n        </div>\n    );\n}\n\nfunction PositionFilter() {\n    const dispatch = useAppDispatch();\n\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor=\"player-position\" className=\"form-label\">\n                Position\n            </label>\n            <Select\n                id=\"player-position\"\n                isMulti\n                options={[\n                    { value: \"lineup\", label: \"Lineup\" },\n                    { value: \"rotation\", label: \"Rotation\" },\n                    { value: \"shadows\", label: \"Shadows\" },\n                ]}\n                onChange={(newItems) => {\n                    const positions = newItems.map((item) => item.value);\n                    dispatch(setPositions(positions));\n                }}\n            />\n        </div>\n    );\n}\n\nfunction ModifierFilter() {\n    const dispatch = useAppDispatch();\n    const selected = useAppSelector((state) => state.playerFilter.mods);\n\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor=\"player-mods\" className=\"form-label\">\n                Modification\n            </label>\n            <ModifierSelect\n                id=\"player-mods\"\n                mods={selected}\n                setMods={(newMods) => dispatch(setMods(newMods))}\n            />\n        </div>\n    );\n}\n\nfunction StatusFilter() {\n    const dispatch = useAppDispatch();\n\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor=\"player-status\" className=\"form-label\">\n                Status\n            </label>\n            <Select\n                id=\"player-status\"\n                isMulti\n                options={[\n                    { value: \"active\", label: \"Active\" },\n                    { value: \"deceased\", label: \"Deceased\" },\n                    { value: \"retired\", label: \"Retired\" },\n                    { value: \"exhibition\", label: \"Exhibition\" },\n                    { value: \"library\", label: \"Pre-History\" },\n                ]}\n                onChange={(newItems) => {\n                    const statuses = newItems.map((item) => item.value);\n                    dispatch(setStatuses(statuses));\n                }}\n            />\n        </div>\n    );\n}\n\nexport default PlayerFilterSelect;\n","import React, { ReactNode } from \"react\";\nimport { ListColumn, setColumn } from \"../../store/tableOptionsSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport CheckboxOption from \"../CheckboxOption\";\n\nexport function PlayerColumnsSelect(): JSX.Element {\n    const advanced = useAppSelector(\n        (state) => state.tableOptions.showAdvancedStats\n    );\n\n    return (\n        <div>\n            <div className=\"form-label\">Show columns</div>\n            <ColumnCheckbox column=\"playerid\">ID</ColumnCheckbox>\n            <ColumnCheckbox column=\"team\">Team</ColumnCheckbox>\n            <ColumnCheckbox column=\"position\">Position</ColumnCheckbox>\n            <ColumnCheckbox column=\"items\">Items</ColumnCheckbox>\n            <ColumnCheckbox column=\"batting\">Batting</ColumnCheckbox>\n            <ColumnCheckbox column=\"pitching\">Pitching</ColumnCheckbox>\n            <ColumnCheckbox column=\"baserunning\">Baserunning</ColumnCheckbox>\n            <ColumnCheckbox column=\"defense\">Defense</ColumnCheckbox>\n            {advanced && (\n                <ColumnCheckbox column=\"vibestats\">Vibes</ColumnCheckbox>\n            )}\n            <ColumnCheckbox column=\"misc\">Misc</ColumnCheckbox>\n        </div>\n    );\n}\n\nfunction ColumnCheckbox(props: { column: ListColumn; children?: ReactNode }) {\n    const dispatch = useAppDispatch();\n    const columns = useAppSelector((state) => state.tableOptions.columns);\n\n    return (\n        <CheckboxOption\n            id={`column-${props.column}`}\n            value={columns[props.column]}\n            setValue={(value) => {\n                dispatch(setColumn({ column: props.column, value }));\n            }}\n        >\n            {props.children}\n        </CheckboxOption>\n    );\n}\n","import React from \"react\";\nimport { Route, Switch, useHistory, useParams } from \"react-router\";\nimport ListOptionsSelect from \"./ListOptionsSelect\";\nimport Nav from \"./Nav\";\nimport PlayerFilterSelect from \"./PlayerFilterSelect\";\nimport { PlayerColumnsSelect } from \"./PlayerColumnsSelect\";\nimport { TeamSelect } from \"./TeamSelect\";\nimport { useLeagueData } from \"../../api/fetchhooks\";\n\nfunction Sidebar(): JSX.Element {\n    return (\n        <div>\n            <div className=\"sidebar-section\">\n                <Nav />\n            </div>\n\n            <Switch>\n                <Route path=\"/\" exact>\n                    <PlayerFilterSelect />\n                </Route>\n                <Route path=\"/team/:abbr\">\n                    <SingleTeamFilter />\n                </Route>\n            </Switch>\n\n            <div className=\"sidebar-section\">\n                <ListOptionsSelect />\n                <PlayerColumnsSelect />\n            </div>\n        </div>\n    );\n}\n\nfunction SingleTeamFilter() {\n    const history = useHistory();\n    const { abbr } = useParams<{ abbr: string }>();\n\n    const data = useLeagueData();\n    if (!data) return null;\n\n    const selectedTeam = Object.values(data.teams).find(\n        (t) => t.shorthand === abbr\n    );\n\n    return (\n        <div className=\"sidebar-section\">\n            <div className=\"mb-3\">\n                <label htmlFor=\"player-team\" className=\"form-label\">\n                    Team\n                </label>\n                <TeamSelect\n                    id=\"player-team\"\n                    multi={false}\n                    teams={selectedTeam ? [selectedTeam.id] : []}\n                    setTeams={(newTeams) => {\n                        const newSelected = data.teams[newTeams[0]];\n                        history.push(`/team/${newSelected.shorthand}`);\n                    }}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { PlayerTable } from \"../components/table/PlayerTable\";\nimport { useLeagueData } from \"../api/fetchhooks\";\nimport { useAppSelector } from \"../hooks\";\n\nfunction SavedPlayersPage(): JSX.Element {\n    const data = useLeagueData();\n    const playerIds = useAppSelector((state) => state.savedPlayers.players);\n\n    if (!data) return <span>Loading...</span>;\n    const players = playerIds.map((id) => data.players[id]);\n\n    return (\n        <div>\n            <h4>Saved players</h4>\n            <PlayerTable players={players} />\n        </div>\n    );\n}\n\nexport default SavedPlayersPage;\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport { PlayerTable } from \"../components/table/PlayerTable\";\nimport { useLeagueData } from \"../api/fetchhooks\";\n\nfunction SingleTeamPage(): JSX.Element {\n    const { abbr } = useParams<{ abbr: string }>();\n    const data = useLeagueData();\n    if (data === null) return <div>Loading</div>;\n\n    const team = Object.values(data.teams).find((t) => t.shorthand === abbr);\n    if (team == null) return <div>Team not found</div>;\n\n    return (\n        <div>\n            <div className=\"mb-4\">\n                <h4>Lineup</h4>\n                <PlayerTable\n                    players={team.lineup.map((id) => data.players[id])}\n                />\n            </div>\n            <div className=\"mb-4\">\n                <h4>Rotation</h4>\n                <PlayerTable\n                    players={team.rotation.map((id) => data.players[id])}\n                />\n            </div>\n            <div className=\"mb-4\">\n                <h4>Shadows</h4>\n                <PlayerTable\n                    players={(team.shadows ?? [...(team.bench ?? []), ...(team.bullpen ?? [])]).map(\n                        (id) => data.players[id]\n                    )}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default SingleTeamPage;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport AllPlayerPage from \"./pages/AllPlayerPage\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Sidebar from \"./components/sidebar/Sidebar\";\nimport SavedPlayersPage from \"./pages/SavedPlayersPage\";\nimport SingleTeamPage from \"./pages/SingleTeamPage\";\n\nfunction App(): JSX.Element {\n    return (\n        <BrowserRouter basename=\"/_before/players\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-3 col-lg-2 sidebar\">\n                        <Sidebar />\n                    </div>\n                    <div className=\"col-md-9 col-lg-10 main\">\n                        <Switch>\n                            <Route path=\"/saved\">\n                                <SavedPlayersPage />\n                            </Route>\n                            <Route path=\"/team/:abbr\">\n                                <SingleTeamPage />\n                            </Route>\n                            <Route path=\"/team\">\n                                <Redirect to=\"/team/KCBM\" />\n                            </Route>\n                            <Route path=\"/\">\n                                <AllPlayerPage />\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface playerItemState {\n    toShow: string[];\n}\n\nconst initialState = { toShow: [] } as playerItemState;\n\nexport const playerItemSlice = createSlice({\n    name: \"playerItems\",\n    initialState,\n    reducers: {\n        toggle: (state, action: PayloadAction<string>) => {\n            if (state.toShow.includes(action.payload)) {\n                state.toShow = state.toShow.filter((id) => id !== action.payload);\n            }\n            else {\n                state.toShow.push(action.payload);\n            }\n        },\n        clear: (state) => {\n            state.toShow = [];\n        },\n    },\n});\n\nexport const { toggle, clear } = playerItemSlice.actions;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { playerFilterSlice } from \"./playerFilterSlice\";\nimport { playerItemSlice } from \"./playerItemSlice\";\nimport { savedPlayersSlice } from \"./savedPlayersSlice\";\nimport { tableOptionsSlice } from \"./tableOptionsSlice\";\n\nexport const store = configureStore({\n    reducer: {\n        savedPlayers: savedPlayersSlice.reducer,\n        tableOptions: tableOptionsSlice.reducer,\n        playerFilter: playerFilterSlice.reducer,\n        playerItems: playerItemSlice.reducer,\n    },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\n\nimport \"./styles/app.scss\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"app\")\n);\n"],"sourceRoot":""}